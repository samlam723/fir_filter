/*
###############################################################
#  Generated by:      Cadence Encounter 14.26-s039_1
#  OS:                Linux x86_64(Host ID EEX060)
#  Generated on:      Fri Jun  4 23:36:56 2021
#  Design:            fir_16tap
#  Command:           saveNetlist results/fir_16tap.routed.v
###############################################################
*/
module dff_16bit_0 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N8, 
	clk__L3_N9, 
	clk__L3_N10, 
	clk__L3_N11, 
	clk__L3_N25);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N8;
   input clk__L3_N9;
   input clk__L3_N10;
   input clk__L3_N11;
   input clk__L3_N25;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N8));
endmodule

module dff_16bit_14 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N7, 
	clk__L3_N8, 
	clk__L3_N9, 
	clk__L3_N10, 
	clk__L3_N11, 
	clk__L3_N21);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N7;
   input clk__L3_N8;
   input clk__L3_N9;
   input clk__L3_N10;
   input clk__L3_N11;
   input clk__L3_N21;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N21));
endmodule

module dff_16bit_13 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N7, 
	clk__L3_N8, 
	clk__L3_N9, 
	clk__L3_N10, 
	clk__L3_N11, 
	clk__L3_N21, 
	clk__L3_N22, 
	clk__L3_N24);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N7;
   input clk__L3_N8;
   input clk__L3_N9;
   input clk__L3_N10;
   input clk__L3_N11;
   input clk__L3_N21;
   input clk__L3_N22;
   input clk__L3_N24;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N8));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N7));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N21));
endmodule

module dff_16bit_12 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N9, 
	clk__L3_N10, 
	clk__L3_N11, 
	clk__L3_N21, 
	clk__L3_N22, 
	clk__L3_N23);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N9;
   input clk__L3_N10;
   input clk__L3_N11;
   input clk__L3_N21;
   input clk__L3_N22;
   input clk__L3_N23;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N11));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N9));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N10));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N21));
endmodule

module dff_16bit_11 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N20, 
	clk__L3_N22, 
	clk__L3_N24, 
	clk__L3_N25);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N20;
   input clk__L3_N22;
   input clk__L3_N24;
   input clk__L3_N25;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N22));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N20));
endmodule

module dff_16bit_10 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N23, 
	clk__L3_N24, 
	clk__L3_N25);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N23;
   input clk__L3_N24;
   input clk__L3_N25;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N25));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N24));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_9 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N20, 
	clk__L3_N23);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N20;
   input clk__L3_N23;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N23));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N20));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N20));
endmodule

module dff_16bit_8 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N3, 
	clk__L3_N4);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N3;
   input clk__L3_N4;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N3));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_7 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N2, 
	clk__L3_N5, 
	clk__L3_N15, 
	clk__L3_N18, 
	clk__L3_N19);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N2;
   input clk__L3_N5;
   input clk__L3_N15;
   input clk__L3_N18;
   input clk__L3_N19;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_6 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N13, 
	clk__L3_N14, 
	clk__L3_N15, 
	clk__L3_N17, 
	clk__L3_N18);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N13;
   input clk__L3_N14;
   input clk__L3_N15;
   input clk__L3_N17;
   input clk__L3_N18;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N13));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_5 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N2, 
	clk__L3_N5, 
	clk__L3_N18, 
	clk__L3_N19);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N2;
   input clk__L3_N5;
   input clk__L3_N18;
   input clk__L3_N19;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N19));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_4 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N2, 
	clk__L3_N13, 
	clk__L3_N14, 
	clk__L3_N15, 
	clk__L3_N16, 
	clk__L3_N17, 
	clk__L3_N18);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N2;
   input clk__L3_N13;
   input clk__L3_N14;
   input clk__L3_N15;
   input clk__L3_N16;
   input clk__L3_N17;
   input clk__L3_N18;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N18));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N13));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N13));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N13));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N13));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N2));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_3 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N12, 
	clk__L3_N16);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N12;
   input clk__L3_N16;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N12));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module dff_16bit_2 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N14, 
	clk__L3_N15, 
	clk__L3_N16, 
	clk__L3_N17);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N14;
   input clk__L3_N15;
   input clk__L3_N16;
   input clk__L3_N17;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N17));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N16));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk__L3_N15));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N14));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk__L3_N15));
endmodule

module dff_16bit_1 (
	d, 
	clk, 
	reset, 
	q, 
	clk__L3_N1, 
	clk__L3_N4, 
	clk__L3_N5);
   input [15:0] d;
   input clk;
   input reset;
   output [15:0] q;
   input clk__L3_N1;
   input clk__L3_N4;
   input clk__L3_N5;

   DFFR_X1 q_reg_15_ (.RN(reset),
	.Q(q[15]),
	.D(d[15]),
	.CK(clk__L3_N5));
   DFFR_X1 q_reg_14_ (.RN(reset),
	.Q(q[14]),
	.D(d[14]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_13_ (.RN(reset),
	.Q(q[13]),
	.D(d[13]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_12_ (.RN(reset),
	.Q(q[12]),
	.D(d[12]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_11_ (.RN(reset),
	.Q(q[11]),
	.D(d[11]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_10_ (.RN(reset),
	.Q(q[10]),
	.D(d[10]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_9_ (.RN(reset),
	.Q(q[9]),
	.D(d[9]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_8_ (.RN(reset),
	.Q(q[8]),
	.D(d[8]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_7_ (.RN(reset),
	.Q(q[7]),
	.D(d[7]),
	.CK(clk__L3_N4));
   DFFR_X1 q_reg_6_ (.RN(reset),
	.Q(q[6]),
	.D(d[6]),
	.CK(clk__L3_N1));
   DFFR_X1 q_reg_5_ (.RN(reset),
	.Q(q[5]),
	.D(d[5]),
	.CK(clk__L3_N1));
   DFFR_X1 q_reg_4_ (.RN(reset),
	.Q(q[4]),
	.D(d[4]),
	.CK(clk));
   DFFR_X1 q_reg_3_ (.RN(reset),
	.Q(q[3]),
	.D(d[3]),
	.CK(clk__L3_N1));
   DFFR_X1 q_reg_2_ (.RN(reset),
	.Q(q[2]),
	.D(d[2]),
	.CK(clk__L3_N1));
   DFFR_X1 q_reg_1_ (.RN(reset),
	.Q(q[1]),
	.D(d[1]),
	.CK(clk__L3_N1));
   DFFR_X1 q_reg_0_ (.RN(reset),
	.Q(q[0]),
	.D(d[0]),
	.CK(clk));
endmodule

module fir_16tap_DW_mult_uns_10 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign product[2] = a[0] ;

   HA_X1 U2 (.S(product[18]),
	.CO(product[19]),
	.B(n2),
	.A(a[15]));
   FA_X1 U3 (.S(product[17]),
	.CO(n2),
	.CI(n3),
	.B(a[14]),
	.A(a[15]));
   FA_X1 U4 (.S(product[16]),
	.CO(n3),
	.CI(n4),
	.B(a[13]),
	.A(a[14]));
   FA_X1 U5 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(a[12]),
	.A(a[13]));
   FA_X1 U6 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(a[11]),
	.A(a[12]));
   FA_X1 U7 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(a[10]),
	.A(a[11]));
   FA_X1 U8 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(a[9]),
	.A(a[10]));
   FA_X1 U9 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(a[8]),
	.A(a[9]));
   FA_X1 U10 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(a[7]),
	.A(a[8]));
   FA_X1 U11 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(a[6]),
	.A(a[7]));
   FA_X1 U12 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(a[5]),
	.A(a[6]));
   FA_X1 U13 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(a[4]),
	.A(a[5]));
   FA_X1 U14 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(a[3]),
	.A(a[4]));
   FA_X1 U15 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(a[2]),
	.A(a[3]));
   FA_X1 U16 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(a[1]),
	.A(a[2]));
   HA_X1 U17 (.S(product[3]),
	.CO(n16),
	.B(a[1]),
	.A(a[0]));
endmodule

module fir_16tap_DW_mult_uns_9 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign product[2] = a[2] ;
   assign product[0] = a[0] ;
   assign product[1] = a[1] ;

   HA_X1 U2 (.S(product[18]),
	.CO(product[19]),
	.B(n2),
	.A(a[15]));
   HA_X1 U3 (.S(product[17]),
	.CO(n2),
	.B(n3),
	.A(a[14]));
   HA_X1 U4 (.S(product[16]),
	.CO(n3),
	.B(n4),
	.A(a[13]));
   FA_X1 U5 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(a[12]),
	.A(a[15]));
   FA_X1 U6 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(a[11]),
	.A(a[14]));
   FA_X1 U7 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(a[10]),
	.A(a[13]));
   FA_X1 U8 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(a[9]),
	.A(a[12]));
   FA_X1 U9 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(a[8]),
	.A(a[11]));
   FA_X1 U10 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(a[7]),
	.A(a[10]));
   FA_X1 U11 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(a[6]),
	.A(a[9]));
   FA_X1 U12 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(a[5]),
	.A(a[8]));
   FA_X1 U13 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(a[4]),
	.A(a[7]));
   FA_X1 U14 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(a[3]),
	.A(a[6]));
   FA_X1 U15 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(a[2]),
	.A(a[5]));
   FA_X1 U16 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(a[1]),
	.A(a[4]));
   HA_X1 U17 (.S(product[3]),
	.CO(n16),
	.B(a[3]),
	.A(a[0]));
endmodule

module fir_16tap_DW_mult_uns_8 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [1:0] b;
   output [17:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign product[0] = a[0] ;

   HA_X1 U2 (.S(product[16]),
	.CO(product[17]),
	.B(n2),
	.A(a[15]));
   FA_X1 U3 (.S(product[15]),
	.CO(n2),
	.CI(n3),
	.B(a[14]),
	.A(a[15]));
   FA_X1 U4 (.S(product[14]),
	.CO(n3),
	.CI(n4),
	.B(a[13]),
	.A(a[14]));
   FA_X1 U5 (.S(product[13]),
	.CO(n4),
	.CI(n5),
	.B(a[12]),
	.A(a[13]));
   FA_X1 U6 (.S(product[12]),
	.CO(n5),
	.CI(n6),
	.B(a[11]),
	.A(a[12]));
   FA_X1 U7 (.S(product[11]),
	.CO(n6),
	.CI(n7),
	.B(a[10]),
	.A(a[11]));
   FA_X1 U8 (.S(product[10]),
	.CO(n7),
	.CI(n8),
	.B(a[9]),
	.A(a[10]));
   FA_X1 U9 (.S(product[9]),
	.CO(n8),
	.CI(n9),
	.B(a[8]),
	.A(a[9]));
   FA_X1 U10 (.S(product[8]),
	.CO(n9),
	.CI(n10),
	.B(a[7]),
	.A(a[8]));
   FA_X1 U11 (.S(product[7]),
	.CO(n10),
	.CI(n11),
	.B(a[6]),
	.A(a[7]));
   FA_X1 U12 (.S(product[6]),
	.CO(n11),
	.CI(n12),
	.B(a[5]),
	.A(a[6]));
   FA_X1 U13 (.S(product[5]),
	.CO(n12),
	.CI(n13),
	.B(a[4]),
	.A(a[5]));
   FA_X1 U14 (.S(product[4]),
	.CO(n13),
	.CI(n14),
	.B(a[3]),
	.A(a[4]));
   FA_X1 U15 (.S(product[3]),
	.CO(n14),
	.CI(n15),
	.B(a[2]),
	.A(a[3]));
   FA_X1 U16 (.S(product[2]),
	.CO(n15),
	.CI(n16),
	.B(a[1]),
	.A(a[2]));
   HA_X1 U17 (.S(product[1]),
	.CO(n16),
	.B(a[1]),
	.A(a[0]));
endmodule

module fir_16tap_DW_mult_uns_7 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [2:0] b;
   output [18:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign product[1] = a[0] ;

   HA_X1 U2 (.S(product[17]),
	.CO(product[18]),
	.B(n2),
	.A(a[15]));
   FA_X1 U3 (.S(product[16]),
	.CO(n2),
	.CI(n3),
	.B(a[14]),
	.A(a[15]));
   FA_X1 U4 (.S(product[15]),
	.CO(n3),
	.CI(n4),
	.B(a[13]),
	.A(a[14]));
   FA_X1 U5 (.S(product[14]),
	.CO(n4),
	.CI(n5),
	.B(a[12]),
	.A(a[13]));
   FA_X1 U6 (.S(product[13]),
	.CO(n5),
	.CI(n6),
	.B(a[11]),
	.A(a[12]));
   FA_X1 U7 (.S(product[12]),
	.CO(n6),
	.CI(n7),
	.B(a[10]),
	.A(a[11]));
   FA_X1 U8 (.S(product[11]),
	.CO(n7),
	.CI(n8),
	.B(a[9]),
	.A(a[10]));
   FA_X1 U9 (.S(product[10]),
	.CO(n8),
	.CI(n9),
	.B(a[8]),
	.A(a[9]));
   FA_X1 U10 (.S(product[9]),
	.CO(n9),
	.CI(n10),
	.B(a[7]),
	.A(a[8]));
   FA_X1 U11 (.S(product[8]),
	.CO(n10),
	.CI(n11),
	.B(a[6]),
	.A(a[7]));
   FA_X1 U12 (.S(product[7]),
	.CO(n11),
	.CI(n12),
	.B(a[5]),
	.A(a[6]));
   FA_X1 U13 (.S(product[6]),
	.CO(n12),
	.CI(n13),
	.B(a[4]),
	.A(a[5]));
   FA_X1 U14 (.S(product[5]),
	.CO(n13),
	.CI(n14),
	.B(a[3]),
	.A(a[4]));
   FA_X1 U15 (.S(product[4]),
	.CO(n14),
	.CI(n15),
	.B(a[2]),
	.A(a[3]));
   FA_X1 U16 (.S(product[3]),
	.CO(n15),
	.CI(n16),
	.B(a[1]),
	.A(a[2]));
   HA_X1 U17 (.S(product[2]),
	.CO(n16),
	.B(a[1]),
	.A(a[0]));
endmodule

module fir_16tap_DW01_add_12 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [29:0] A;
   input [29:0] B;
   input CI;
   output [29:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire [20:2] carry;

   FA_X1 U1_19 (.S(SUM[19]),
	.CO(carry[20]),
	.CI(carry[19]),
	.B(B[19]),
	.A(A[19]));
   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(carry[2]),
	.B(B[2]),
	.A(A[2]));
   FA_X1 U1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.CI(n1),
	.B(B[1]),
	.A(A[1]));
   AND2_X1 U1 (.ZN(n1),
	.A2(A[0]),
	.A1(B[0]));
   AND2_X1 U2 (.ZN(SUM[21]),
	.A2(carry[20]),
	.A1(A[20]));
   XOR2_X1 U3 (.Z(SUM[20]),
	.B(carry[20]),
	.A(A[20]));
   XOR2_X1 U4 (.Z(SUM[0]),
	.B(A[0]),
	.A(B[0]));
endmodule

module fir_16tap_DW_mult_uns_6 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [2:0] b;
   output [18:0] product;

   // Internal wires
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;

   assign product[0] = a[0] ;

   FA_X1 U6 (.S(product[15]),
	.CO(n3),
	.CI(n4),
	.B(n78),
	.A(a[12]));
   FA_X1 U7 (.S(product[14]),
	.CO(n4),
	.CI(n5),
	.B(n79),
	.A(a[11]));
   FA_X1 U8 (.S(product[13]),
	.CO(n5),
	.CI(n6),
	.B(n80),
	.A(a[10]));
   FA_X1 U9 (.S(product[12]),
	.CO(n6),
	.CI(n7),
	.B(n81),
	.A(a[9]));
   FA_X1 U10 (.S(product[11]),
	.CO(n7),
	.CI(n8),
	.B(n82),
	.A(a[8]));
   FA_X1 U11 (.S(product[10]),
	.CO(n8),
	.CI(n9),
	.B(n83),
	.A(a[7]));
   FA_X1 U12 (.S(product[9]),
	.CO(n9),
	.CI(n10),
	.B(n84),
	.A(a[6]));
   FA_X1 U13 (.S(product[8]),
	.CO(n10),
	.CI(n11),
	.B(n85),
	.A(a[5]));
   FA_X1 U14 (.S(product[7]),
	.CO(n11),
	.CI(n12),
	.B(n86),
	.A(a[4]));
   FA_X1 U15 (.S(product[6]),
	.CO(n12),
	.CI(n13),
	.B(n87),
	.A(a[3]));
   FA_X1 U16 (.S(product[5]),
	.CO(n13),
	.CI(n14),
	.B(n88),
	.A(a[2]));
   FA_X1 U17 (.S(product[4]),
	.CO(n14),
	.CI(n15),
	.B(n89),
	.A(a[1]));
   FA_X1 U18 (.S(product[3]),
	.CO(n15),
	.CI(n16),
	.B(n90),
	.A(a[0]));
   HA_X1 U19 (.S(product[2]),
	.CO(n16),
	.B(n17),
	.A(n91));
   HA_X1 U20 (.S(product[1]),
	.CO(n17),
	.B(n93),
	.A(n92));
   INV_X1 U41 (.ZN(n92),
	.A(a[1]));
   INV_X1 U42 (.ZN(n93),
	.A(a[0]));
   INV_X1 U43 (.ZN(n78),
	.A(a[15]));
   INV_X1 U44 (.ZN(n90),
	.A(a[3]));
   INV_X1 U45 (.ZN(n89),
	.A(a[4]));
   INV_X1 U46 (.ZN(n88),
	.A(a[5]));
   INV_X1 U47 (.ZN(n87),
	.A(a[6]));
   INV_X1 U48 (.ZN(n86),
	.A(a[7]));
   INV_X1 U49 (.ZN(n85),
	.A(a[8]));
   INV_X1 U50 (.ZN(n84),
	.A(a[9]));
   INV_X1 U51 (.ZN(n83),
	.A(a[10]));
   INV_X1 U52 (.ZN(n82),
	.A(a[11]));
   INV_X1 U53 (.ZN(n81),
	.A(a[12]));
   INV_X1 U54 (.ZN(n80),
	.A(a[13]));
   INV_X1 U55 (.ZN(n91),
	.A(a[2]));
   INV_X1 U56 (.ZN(n79),
	.A(a[14]));
   XNOR2_X1 U58 (.ZN(product[18]),
	.B(n94),
	.A(a[15]));
   NAND2_X1 U59 (.ZN(n94),
	.A2(n79),
	.A1(n95));
   XNOR2_X1 U60 (.ZN(product[17]),
	.B(n95),
	.A(n79));
   NOR2_X1 U61 (.ZN(n95),
	.A2(a[13]),
	.A1(n3));
   XNOR2_X1 U62 (.ZN(product[16]),
	.B(n3),
	.A(a[13]));
endmodule

module fir_16tap_DW_mult_uns_5 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [2:0] b;
   output [18:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign product[0] = a[0] ;
   assign product[1] = a[1] ;

   HA_X1 U2 (.S(product[17]),
	.CO(product[18]),
	.B(n2),
	.A(a[15]));
   HA_X1 U3 (.S(product[16]),
	.CO(n2),
	.B(n3),
	.A(a[14]));
   FA_X1 U4 (.S(product[15]),
	.CO(n3),
	.CI(n4),
	.B(a[13]),
	.A(a[15]));
   FA_X1 U5 (.S(product[14]),
	.CO(n4),
	.CI(n5),
	.B(a[12]),
	.A(a[14]));
   FA_X1 U6 (.S(product[13]),
	.CO(n5),
	.CI(n6),
	.B(a[11]),
	.A(a[13]));
   FA_X1 U7 (.S(product[12]),
	.CO(n6),
	.CI(n7),
	.B(a[10]),
	.A(a[12]));
   FA_X1 U8 (.S(product[11]),
	.CO(n7),
	.CI(n8),
	.B(a[9]),
	.A(a[11]));
   FA_X1 U9 (.S(product[10]),
	.CO(n8),
	.CI(n9),
	.B(a[8]),
	.A(a[10]));
   FA_X1 U10 (.S(product[9]),
	.CO(n9),
	.CI(n10),
	.B(a[7]),
	.A(a[9]));
   FA_X1 U11 (.S(product[8]),
	.CO(n10),
	.CI(n11),
	.B(a[6]),
	.A(a[8]));
   FA_X1 U12 (.S(product[7]),
	.CO(n11),
	.CI(n12),
	.B(a[5]),
	.A(a[7]));
   FA_X1 U13 (.S(product[6]),
	.CO(n12),
	.CI(n13),
	.B(a[4]),
	.A(a[6]));
   FA_X1 U14 (.S(product[5]),
	.CO(n13),
	.CI(n14),
	.B(a[3]),
	.A(a[5]));
   FA_X1 U15 (.S(product[4]),
	.CO(n14),
	.CI(n15),
	.B(a[2]),
	.A(a[4]));
   FA_X1 U16 (.S(product[3]),
	.CO(n15),
	.CI(n16),
	.B(a[1]),
	.A(a[3]));
   HA_X1 U17 (.S(product[2]),
	.CO(n16),
	.B(a[2]),
	.A(a[0]));
endmodule

module fir_16tap_DW01_add_11 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [22:0] A;
   input [22:0] B;
   input CI;
   output [22:0] SUM;
   output CO;

   // Internal wires
   wire n2;
   wire [18:2] carry;

   FA_X1 U1_18 (.S(SUM[18]),
	.CO(SUM[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(carry[2]),
	.B(B[2]),
	.A(A[2]));
   FA_X1 U1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.CI(n2),
	.B(B[1]),
	.A(A[1]));
   XOR2_X1 U1 (.Z(SUM[0]),
	.B(A[0]),
	.A(B[0]));
   AND2_X1 U2 (.ZN(n2),
	.A2(A[0]),
	.A1(B[0]));
endmodule

module fir_16tap_DW_mult_uns_4 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;

   assign product[0] = a[0] ;
   assign product[1] = a[1] ;

   FA_X1 U2 (.S(product[18]),
	.CO(product[19]),
	.CI(n2),
	.B(a[15]),
	.A(n18));
   FA_X1 U3 (.S(product[17]),
	.CO(n2),
	.CI(n3),
	.B(n20),
	.A(n19));
   FA_X1 U4 (.S(product[16]),
	.CO(n3),
	.CI(n4),
	.B(n21),
	.A(n22));
   FA_X1 U5 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(n24),
	.A(n23));
   FA_X1 U6 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(n26),
	.A(n25));
   FA_X1 U7 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(n28),
	.A(n27));
   FA_X1 U8 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(n30),
	.A(n29));
   FA_X1 U9 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(n32),
	.A(n31));
   FA_X1 U10 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(n34),
	.A(n33));
   FA_X1 U11 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(n36),
	.A(n35));
   FA_X1 U12 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(n38),
	.A(n37));
   FA_X1 U13 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(n40),
	.A(n39));
   FA_X1 U14 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(n42),
	.A(n41));
   FA_X1 U15 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(n44),
	.A(n43));
   FA_X1 U16 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(n46),
	.A(n45));
   FA_X1 U17 (.S(product[3]),
	.CO(n16),
	.CI(n47),
	.B(a[0]),
	.A(n17));
   HA_X1 U18 (.S(product[2]),
	.CO(n17),
	.B(a[2]),
	.A(a[0]));
   HA_X1 U19 (.S(n19),
	.CO(n18),
	.B(a[14]),
	.A(a[15]));
   HA_X1 U20 (.S(n21),
	.CO(n20),
	.B(a[13]),
	.A(a[14]));
   FA_X1 U21 (.S(n23),
	.CO(n22),
	.CI(a[13]),
	.B(a[15]),
	.A(a[12]));
   FA_X1 U22 (.S(n25),
	.CO(n24),
	.CI(a[12]),
	.B(a[14]),
	.A(a[11]));
   FA_X1 U23 (.S(n27),
	.CO(n26),
	.CI(a[11]),
	.B(a[13]),
	.A(a[10]));
   FA_X1 U24 (.S(n29),
	.CO(n28),
	.CI(a[10]),
	.B(a[12]),
	.A(a[9]));
   FA_X1 U25 (.S(n31),
	.CO(n30),
	.CI(a[9]),
	.B(a[11]),
	.A(a[8]));
   FA_X1 U26 (.S(n33),
	.CO(n32),
	.CI(a[8]),
	.B(a[10]),
	.A(a[7]));
   FA_X1 U27 (.S(n35),
	.CO(n34),
	.CI(a[7]),
	.B(a[9]),
	.A(a[6]));
   FA_X1 U28 (.S(n37),
	.CO(n36),
	.CI(a[6]),
	.B(a[8]),
	.A(a[5]));
   FA_X1 U29 (.S(n39),
	.CO(n38),
	.CI(a[5]),
	.B(a[7]),
	.A(a[4]));
   FA_X1 U30 (.S(n41),
	.CO(n40),
	.CI(a[4]),
	.B(a[6]),
	.A(a[3]));
   FA_X1 U31 (.S(n43),
	.CO(n42),
	.CI(a[3]),
	.B(a[5]),
	.A(a[2]));
   FA_X1 U32 (.S(n45),
	.CO(n44),
	.CI(a[2]),
	.B(a[4]),
	.A(a[1]));
   HA_X1 U33 (.S(n47),
	.CO(n46),
	.B(a[1]),
	.A(a[3]));
endmodule

module fir_16tap_DW_mult_uns_3 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign product[1] = a[0] ;
   assign product[2] = a[1] ;

   HA_X1 U2 (.S(product[18]),
	.CO(product[19]),
	.B(n2),
	.A(a[15]));
   HA_X1 U3 (.S(product[17]),
	.CO(n2),
	.B(n3),
	.A(a[14]));
   FA_X1 U4 (.S(product[16]),
	.CO(n3),
	.CI(n4),
	.B(a[13]),
	.A(a[15]));
   FA_X1 U5 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(a[12]),
	.A(a[14]));
   FA_X1 U6 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(a[11]),
	.A(a[13]));
   FA_X1 U7 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(a[10]),
	.A(a[12]));
   FA_X1 U8 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(a[9]),
	.A(a[11]));
   FA_X1 U9 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(a[8]),
	.A(a[10]));
   FA_X1 U10 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(a[7]),
	.A(a[9]));
   FA_X1 U11 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(a[6]),
	.A(a[8]));
   FA_X1 U12 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(a[5]),
	.A(a[7]));
   FA_X1 U13 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(a[4]),
	.A(a[6]));
   FA_X1 U14 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(a[3]),
	.A(a[5]));
   FA_X1 U15 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(a[2]),
	.A(a[4]));
   FA_X1 U16 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(a[1]),
	.A(a[3]));
   HA_X1 U17 (.S(product[3]),
	.CO(n16),
	.B(a[2]),
	.A(a[0]));
endmodule

module fir_16tap_DW_mult_uns_2 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;

   assign product[1] = a[0] ;

   FA_X1 U6 (.S(product[16]),
	.CO(n3),
	.CI(n4),
	.B(n80),
	.A(a[12]));
   FA_X1 U7 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(n81),
	.A(a[11]));
   FA_X1 U8 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(n82),
	.A(a[10]));
   FA_X1 U9 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(n83),
	.A(a[9]));
   FA_X1 U10 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(n84),
	.A(a[8]));
   FA_X1 U11 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(n85),
	.A(a[7]));
   FA_X1 U12 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(n86),
	.A(a[6]));
   FA_X1 U13 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(n87),
	.A(a[5]));
   FA_X1 U14 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(n88),
	.A(a[4]));
   FA_X1 U15 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(n89),
	.A(a[3]));
   FA_X1 U16 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(n90),
	.A(a[2]));
   FA_X1 U17 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(n91),
	.A(a[1]));
   FA_X1 U18 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(n92),
	.A(a[0]));
   HA_X1 U19 (.S(product[3]),
	.CO(n16),
	.B(n17),
	.A(n93));
   HA_X1 U20 (.S(product[2]),
	.CO(n17),
	.B(n95),
	.A(n94));
   INV_X1 U42 (.ZN(n94),
	.A(a[1]));
   INV_X1 U43 (.ZN(n95),
	.A(a[0]));
   INV_X1 U44 (.ZN(n93),
	.A(a[2]));
   INV_X1 U45 (.ZN(n92),
	.A(a[3]));
   INV_X1 U46 (.ZN(n80),
	.A(a[15]));
   INV_X1 U47 (.ZN(n91),
	.A(a[4]));
   INV_X1 U48 (.ZN(n90),
	.A(a[5]));
   INV_X1 U49 (.ZN(n89),
	.A(a[6]));
   INV_X1 U50 (.ZN(n88),
	.A(a[7]));
   INV_X1 U51 (.ZN(n87),
	.A(a[8]));
   INV_X1 U52 (.ZN(n86),
	.A(a[9]));
   INV_X1 U53 (.ZN(n85),
	.A(a[10]));
   INV_X1 U54 (.ZN(n84),
	.A(a[11]));
   INV_X1 U55 (.ZN(n83),
	.A(a[12]));
   INV_X1 U56 (.ZN(n82),
	.A(a[13]));
   INV_X1 U57 (.ZN(n81),
	.A(a[14]));
   XNOR2_X1 U59 (.ZN(product[19]),
	.B(n96),
	.A(a[15]));
   NAND2_X1 U60 (.ZN(n96),
	.A2(n81),
	.A1(n97));
   XNOR2_X1 U61 (.ZN(product[18]),
	.B(n97),
	.A(n81));
   NOR2_X1 U62 (.ZN(n97),
	.A2(a[13]),
	.A1(n3));
   XNOR2_X1 U63 (.ZN(product[17]),
	.B(n3),
	.A(a[13]));
endmodule

module fir_16tap_DW01_add_8 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [21:0] A;
   input [21:0] B;
   input CI;
   output [21:0] SUM;
   output CO;

   // Internal wires
   wire n2;
   wire [19:3] carry;

   FA_X1 U1_19 (.S(SUM[19]),
	.CO(SUM[20]),
	.CI(carry[19]),
	.B(B[19]),
	.A(A[19]));
   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(n2),
	.B(B[2]),
	.A(A[2]));
   XOR2_X1 U1 (.Z(SUM[1]),
	.B(A[1]),
	.A(B[1]));
   AND2_X1 U2 (.ZN(n2),
	.A2(A[1]),
	.A1(B[1]));
endmodule

module fir_16tap_DW01_add_7 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [22:0] A;
   input [22:0] B;
   input CI;
   output [22:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire [20:3] carry;

   assign SUM[0] = A[0] ;

   FA_X1 U1_19 (.S(SUM[19]),
	.CO(carry[20]),
	.CI(carry[19]),
	.B(B[19]),
	.A(A[19]));
   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(n1),
	.B(B[2]),
	.A(A[2]));
   AND2_X1 U1 (.ZN(n1),
	.A2(A[1]),
	.A1(B[1]));
   XOR2_X1 U2 (.Z(SUM[1]),
	.B(A[1]),
	.A(B[1]));
   XOR2_X1 U3 (.Z(SUM[20]),
	.B(carry[20]),
	.A(B[20]));
   AND2_X1 U4 (.ZN(SUM[21]),
	.A2(carry[20]),
	.A1(B[20]));
endmodule

module fir_16tap_DW01_add_5 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [26:0] A;
   input [26:0] B;
   input CI;
   output [26:0] SUM;
   output CO;

   // Internal wires
   wire n2;
   wire n3;
   wire n8;
   wire [19:3] carry;

   assign SUM[0] = A[0] ;

   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(n2),
	.B(B[2]),
	.A(A[2]));
   XOR2_X1 U1 (.Z(SUM[1]),
	.B(A[1]),
	.A(B[1]));
   AND2_X1 U2 (.ZN(n2),
	.A2(A[1]),
	.A1(B[1]));
   AND2_X1 U3 (.ZN(n3),
	.A2(n8),
	.A1(A[20]));
   AND2_X1 U4 (.ZN(SUM[22]),
	.A2(n3),
	.A1(A[21]));
   XOR2_X1 U5 (.Z(SUM[19]),
	.B(carry[19]),
	.A(A[19]));
   XOR2_X1 U6 (.Z(SUM[20]),
	.B(n8),
	.A(A[20]));
   XOR2_X1 U7 (.Z(SUM[21]),
	.B(n3),
	.A(A[21]));
   AND2_X1 U8 (.ZN(n8),
	.A2(carry[19]),
	.A1(A[19]));
endmodule

module fir_16tap_DW01_add_4 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [27:0] A;
   input [27:0] B;
   input CI;
   output [27:0] SUM;
   output CO;

   // Internal wires
   wire n3;
   wire [22:2] carry;

   FA_X1 U1_21 (.S(SUM[21]),
	.CO(carry[22]),
	.CI(carry[21]),
	.B(B[21]),
	.A(A[21]));
   FA_X1 U1_20 (.S(SUM[20]),
	.CO(carry[21]),
	.CI(carry[20]),
	.B(B[20]),
	.A(A[20]));
   FA_X1 U1_19 (.S(SUM[19]),
	.CO(carry[20]),
	.CI(carry[19]),
	.B(B[19]),
	.A(A[19]));
   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(carry[2]),
	.B(B[2]),
	.A(A[2]));
   FA_X1 U1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.CI(n3),
	.B(B[1]),
	.A(A[1]));
   AND2_X1 U1 (.ZN(SUM[23]),
	.A2(carry[22]),
	.A1(B[22]));
   XOR2_X1 U2 (.Z(SUM[22]),
	.B(carry[22]),
	.A(B[22]));
   AND2_X1 U3 (.ZN(n3),
	.A2(A[0]),
	.A1(B[0]));
   XOR2_X1 U4 (.Z(SUM[0]),
	.B(A[0]),
	.A(B[0]));
endmodule

module fir_16tap_DW01_add_3 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [30:0] A;
   input [30:0] B;
   input CI;
   output [30:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire n6;
   wire [22:2] carry;

   FA_X1 U1_21 (.S(SUM[21]),
	.CO(carry[22]),
	.CI(carry[21]),
	.B(B[21]),
	.A(A[21]));
   FA_X1 U1_20 (.S(SUM[20]),
	.CO(carry[21]),
	.CI(carry[20]),
	.B(B[20]),
	.A(A[20]));
   FA_X1 U1_19 (.S(SUM[19]),
	.CO(carry[20]),
	.CI(carry[19]),
	.B(B[19]),
	.A(A[19]));
   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(carry[2]),
	.B(B[2]),
	.A(A[2]));
   FA_X1 U1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.CI(n6),
	.B(B[1]),
	.A(A[1]));
   AND2_X1 U1 (.ZN(n1),
	.A2(carry[22]),
	.A1(A[22]));
   AND2_X1 U2 (.ZN(SUM[24]),
	.A2(n1),
	.A1(A[23]));
   XOR2_X1 U3 (.Z(SUM[23]),
	.B(n1),
	.A(A[23]));
   XOR2_X1 U4 (.Z(SUM[22]),
	.B(carry[22]),
	.A(A[22]));
   XOR2_X1 U5 (.Z(SUM[0]),
	.B(A[0]),
	.A(B[0]));
   AND2_X1 U6 (.ZN(n6),
	.A2(A[0]),
	.A1(B[0]));
endmodule

module fir_16tap_DW_mult_uns_1 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;

   assign product[0] = a[0] ;

   HA_X1 U2 (.S(product[18]),
	.CO(product[19]),
	.B(n2),
	.A(a[15]));
   FA_X1 U3 (.S(product[17]),
	.CO(n2),
	.CI(n3),
	.B(a[14]),
	.A(n19));
   FA_X1 U4 (.S(product[16]),
	.CO(n3),
	.CI(n4),
	.B(n20),
	.A(n21));
   FA_X1 U5 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(n23),
	.A(n22));
   FA_X1 U6 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(n25),
	.A(n24));
   FA_X1 U7 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(n27),
	.A(n26));
   FA_X1 U8 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(n29),
	.A(n28));
   FA_X1 U9 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(n31),
	.A(n30));
   FA_X1 U10 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(n33),
	.A(n32));
   FA_X1 U11 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(n35),
	.A(n34));
   FA_X1 U12 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(n37),
	.A(n36));
   FA_X1 U13 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(n39),
	.A(n38));
   FA_X1 U14 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(n41),
	.A(n40));
   FA_X1 U15 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(n43),
	.A(n42));
   FA_X1 U16 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(n45),
	.A(n44));
   FA_X1 U17 (.S(product[3]),
	.CO(n16),
	.CI(n17),
	.B(a[0]),
	.A(n46));
   FA_X1 U18 (.S(product[2]),
	.CO(n17),
	.CI(n18),
	.B(a[1]),
	.A(a[2]));
   HA_X1 U19 (.S(product[1]),
	.CO(n18),
	.B(a[1]),
	.A(a[0]));
   HA_X1 U20 (.S(n20),
	.CO(n19),
	.B(a[13]),
	.A(a[15]));
   FA_X1 U21 (.S(n22),
	.CO(n21),
	.CI(a[14]),
	.B(a[15]),
	.A(a[12]));
   FA_X1 U22 (.S(n24),
	.CO(n23),
	.CI(a[13]),
	.B(a[14]),
	.A(a[11]));
   FA_X1 U23 (.S(n26),
	.CO(n25),
	.CI(a[12]),
	.B(a[13]),
	.A(a[10]));
   FA_X1 U24 (.S(n28),
	.CO(n27),
	.CI(a[11]),
	.B(a[12]),
	.A(a[9]));
   FA_X1 U25 (.S(n30),
	.CO(n29),
	.CI(a[10]),
	.B(a[11]),
	.A(a[8]));
   FA_X1 U26 (.S(n32),
	.CO(n31),
	.CI(a[9]),
	.B(a[10]),
	.A(a[7]));
   FA_X1 U27 (.S(n34),
	.CO(n33),
	.CI(a[8]),
	.B(a[9]),
	.A(a[6]));
   FA_X1 U28 (.S(n36),
	.CO(n35),
	.CI(a[7]),
	.B(a[8]),
	.A(a[5]));
   FA_X1 U29 (.S(n38),
	.CO(n37),
	.CI(a[6]),
	.B(a[7]),
	.A(a[4]));
   FA_X1 U30 (.S(n40),
	.CO(n39),
	.CI(a[5]),
	.B(a[6]),
	.A(a[3]));
   FA_X1 U31 (.S(n42),
	.CO(n41),
	.CI(a[4]),
	.B(a[5]),
	.A(a[2]));
   FA_X1 U32 (.S(n44),
	.CO(n43),
	.CI(a[3]),
	.B(a[4]),
	.A(a[1]));
   HA_X1 U33 (.S(n46),
	.CO(n45),
	.B(a[2]),
	.A(a[3]));
endmodule

module fir_16tap_DW_mult_uns_0 (
	a, 
	b, 
	product);
   input [15:0] a;
   input [3:0] b;
   output [19:0] product;

   // Internal wires
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;

   assign product[0] = a[0] ;

   FA_X1 U8 (.S(product[15]),
	.CO(n4),
	.CI(n5),
	.B(n81),
	.A(a[11]));
   FA_X1 U9 (.S(product[14]),
	.CO(n5),
	.CI(n6),
	.B(n82),
	.A(a[10]));
   FA_X1 U10 (.S(product[13]),
	.CO(n6),
	.CI(n7),
	.B(n83),
	.A(a[9]));
   FA_X1 U11 (.S(product[12]),
	.CO(n7),
	.CI(n8),
	.B(n84),
	.A(a[8]));
   FA_X1 U12 (.S(product[11]),
	.CO(n8),
	.CI(n9),
	.B(n85),
	.A(a[7]));
   FA_X1 U13 (.S(product[10]),
	.CO(n9),
	.CI(n10),
	.B(n86),
	.A(a[6]));
   FA_X1 U14 (.S(product[9]),
	.CO(n10),
	.CI(n11),
	.B(n87),
	.A(a[5]));
   FA_X1 U15 (.S(product[8]),
	.CO(n11),
	.CI(n12),
	.B(n88),
	.A(a[4]));
   FA_X1 U16 (.S(product[7]),
	.CO(n12),
	.CI(n13),
	.B(n89),
	.A(a[3]));
   FA_X1 U17 (.S(product[6]),
	.CO(n13),
	.CI(n14),
	.B(n90),
	.A(a[2]));
   FA_X1 U18 (.S(product[5]),
	.CO(n14),
	.CI(n15),
	.B(n91),
	.A(a[1]));
   FA_X1 U19 (.S(product[4]),
	.CO(n15),
	.CI(n16),
	.B(n92),
	.A(a[0]));
   HA_X1 U20 (.S(product[3]),
	.CO(n16),
	.B(n17),
	.A(n93));
   HA_X1 U21 (.S(product[2]),
	.CO(n17),
	.B(n18),
	.A(n94));
   HA_X1 U22 (.S(product[1]),
	.CO(n18),
	.B(n96),
	.A(n95));
   INV_X1 U43 (.ZN(n95),
	.A(a[1]));
   INV_X1 U44 (.ZN(n96),
	.A(a[0]));
   INV_X1 U45 (.ZN(n94),
	.A(a[2]));
   INV_X1 U46 (.ZN(n93),
	.A(a[3]));
   INV_X1 U47 (.ZN(n92),
	.A(a[4]));
   INV_X1 U48 (.ZN(n91),
	.A(a[5]));
   INV_X1 U49 (.ZN(n90),
	.A(a[6]));
   INV_X1 U50 (.ZN(n89),
	.A(a[7]));
   INV_X1 U51 (.ZN(n88),
	.A(a[8]));
   INV_X1 U52 (.ZN(n87),
	.A(a[9]));
   INV_X1 U53 (.ZN(n86),
	.A(a[10]));
   INV_X1 U54 (.ZN(n85),
	.A(a[11]));
   INV_X1 U55 (.ZN(n84),
	.A(a[12]));
   INV_X1 U56 (.ZN(n83),
	.A(a[13]));
   INV_X1 U57 (.ZN(n81),
	.A(a[15]));
   INV_X1 U58 (.ZN(n82),
	.A(a[14]));
   XOR2_X1 U60 (.Z(product[19]),
	.B(n97),
	.A(n81));
   NAND2_X1 U61 (.ZN(n97),
	.A2(n82),
	.A1(n98));
   XOR2_X1 U62 (.Z(product[18]),
	.B(n98),
	.A(a[14]));
   NOR2_X1 U63 (.ZN(n98),
	.A2(a[13]),
	.A1(n99));
   XOR2_X1 U64 (.Z(product[17]),
	.B(n99),
	.A(n83));
   OR2_X1 U65 (.ZN(n99),
	.A2(a[12]),
	.A1(n4));
   XOR2_X1 U66 (.Z(product[16]),
	.B(n4),
	.A(n84));
endmodule

module fir_16tap_DW01_add_1 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [31:0] A;
   input [31:0] B;
   input CI;
   output [31:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire n2;
   wire n7;
   wire n9;
   wire [21:2] carry;

   FA_X1 U1_20 (.S(SUM[20]),
	.CO(carry[21]),
	.CI(carry[20]),
	.B(B[20]),
	.A(A[20]));
   FA_X1 U1_19 (.S(SUM[19]),
	.CO(carry[20]),
	.CI(carry[19]),
	.B(B[19]),
	.A(A[19]));
   FA_X1 U1_18 (.S(SUM[18]),
	.CO(carry[19]),
	.CI(carry[18]),
	.B(B[18]),
	.A(A[18]));
   FA_X1 U1_17 (.S(SUM[17]),
	.CO(carry[18]),
	.CI(carry[17]),
	.B(B[17]),
	.A(A[17]));
   FA_X1 U1_16 (.S(SUM[16]),
	.CO(carry[17]),
	.CI(carry[16]),
	.B(B[16]),
	.A(A[16]));
   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(carry[2]),
	.B(B[2]),
	.A(A[2]));
   FA_X1 U1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.CI(n9),
	.B(B[1]),
	.A(A[1]));
   AND2_X1 U1 (.ZN(n1),
	.A2(n7),
	.A1(B[22]));
   AND2_X1 U2 (.ZN(n2),
	.A2(n1),
	.A1(B[23]));
   AND2_X1 U3 (.ZN(SUM[25]),
	.A2(n2),
	.A1(B[24]));
   XOR2_X1 U4 (.Z(SUM[22]),
	.B(n7),
	.A(B[22]));
   XOR2_X1 U5 (.Z(SUM[23]),
	.B(n1),
	.A(B[23]));
   XOR2_X1 U6 (.Z(SUM[24]),
	.B(n2),
	.A(B[24]));
   AND2_X1 U7 (.ZN(n7),
	.A2(carry[21]),
	.A1(B[21]));
   XOR2_X1 U8 (.Z(SUM[21]),
	.B(carry[21]),
	.A(B[21]));
   AND2_X1 U9 (.ZN(n9),
	.A2(A[0]),
	.A1(B[0]));
   XOR2_X1 U10 (.Z(SUM[0]),
	.B(A[0]),
	.A(B[0]));
endmodule

module fir_16tap_DW01_add_0 (
	A, 
	B, 
	CI, 
	SUM, 
	CO);
   input [31:0] A;
   input [31:0] B;
   input CI;
   output [31:0] SUM;
   output CO;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n9;
   wire n11;
   wire n12;
   wire n15;
   wire n16;
   wire n19;
   wire n21;
   wire [16:2] carry;

   FA_X1 U1_15 (.S(SUM[15]),
	.CO(carry[16]),
	.CI(carry[15]),
	.B(B[15]),
	.A(A[15]));
   FA_X1 U1_14 (.S(SUM[14]),
	.CO(carry[15]),
	.CI(carry[14]),
	.B(B[14]),
	.A(A[14]));
   FA_X1 U1_13 (.S(SUM[13]),
	.CO(carry[14]),
	.CI(carry[13]),
	.B(B[13]),
	.A(A[13]));
   FA_X1 U1_12 (.S(SUM[12]),
	.CO(carry[13]),
	.CI(carry[12]),
	.B(B[12]),
	.A(A[12]));
   FA_X1 U1_11 (.S(SUM[11]),
	.CO(carry[12]),
	.CI(carry[11]),
	.B(B[11]),
	.A(A[11]));
   FA_X1 U1_10 (.S(SUM[10]),
	.CO(carry[11]),
	.CI(carry[10]),
	.B(B[10]),
	.A(A[10]));
   FA_X1 U1_9 (.S(SUM[9]),
	.CO(carry[10]),
	.CI(carry[9]),
	.B(B[9]),
	.A(A[9]));
   FA_X1 U1_8 (.S(SUM[8]),
	.CO(carry[9]),
	.CI(carry[8]),
	.B(B[8]),
	.A(A[8]));
   FA_X1 U1_7 (.S(SUM[7]),
	.CO(carry[8]),
	.CI(carry[7]),
	.B(B[7]),
	.A(A[7]));
   FA_X1 U1_6 (.S(SUM[6]),
	.CO(carry[7]),
	.CI(carry[6]),
	.B(B[6]),
	.A(A[6]));
   FA_X1 U1_5 (.S(SUM[5]),
	.CO(carry[6]),
	.CI(carry[5]),
	.B(B[5]),
	.A(A[5]));
   FA_X1 U1_4 (.S(SUM[4]),
	.CO(carry[5]),
	.CI(carry[4]),
	.B(B[4]),
	.A(A[4]));
   FA_X1 U1_3 (.S(SUM[3]),
	.CO(carry[4]),
	.CI(carry[3]),
	.B(B[3]),
	.A(A[3]));
   FA_X1 U1_2 (.S(SUM[2]),
	.CO(carry[3]),
	.CI(carry[2]),
	.B(B[2]),
	.A(A[2]));
   FA_X1 U1_1 (.S(SUM[1]),
	.CO(carry[2]),
	.CI(n21),
	.B(B[1]),
	.A(A[1]));
   AND2_X1 U1 (.ZN(n1),
	.A2(n9),
	.A1(A[22]));
   AND2_X1 U2 (.ZN(n2),
	.A2(n1),
	.A1(A[23]));
   AND2_X1 U3 (.ZN(n3),
	.A2(n2),
	.A1(A[24]));
   XOR2_X1 U4 (.Z(SUM[25]),
	.B(n3),
	.A(A[25]));
   XOR2_X1 U5 (.Z(SUM[22]),
	.B(n9),
	.A(A[22]));
   XOR2_X1 U6 (.Z(SUM[23]),
	.B(n1),
	.A(A[23]));
   XOR2_X1 U7 (.Z(SUM[24]),
	.B(n2),
	.A(A[24]));
   AND2_X1 U8 (.ZN(SUM[26]),
	.A2(n3),
	.A1(A[25]));
   AND2_X1 U9 (.ZN(n9),
	.A2(n12),
	.A1(A[21]));
   XOR2_X1 U10 (.Z(SUM[21]),
	.B(n12),
	.A(A[21]));
   AND2_X1 U11 (.ZN(n11),
	.A2(n16),
	.A1(A[19]));
   AND2_X1 U12 (.ZN(n12),
	.A2(n11),
	.A1(A[20]));
   XOR2_X1 U13 (.Z(SUM[19]),
	.B(n16),
	.A(A[19]));
   XOR2_X1 U14 (.Z(SUM[20]),
	.B(n11),
	.A(A[20]));
   AND2_X1 U15 (.ZN(n15),
	.A2(n19),
	.A1(A[17]));
   AND2_X1 U16 (.ZN(n16),
	.A2(n15),
	.A1(A[18]));
   XOR2_X1 U17 (.Z(SUM[18]),
	.B(n15),
	.A(A[18]));
   XOR2_X1 U18 (.Z(SUM[17]),
	.B(n19),
	.A(A[17]));
   AND2_X1 U19 (.ZN(n19),
	.A2(carry[16]),
	.A1(A[16]));
   XOR2_X1 U20 (.Z(SUM[16]),
	.B(carry[16]),
	.A(A[16]));
   AND2_X1 U21 (.ZN(n21),
	.A2(A[0]),
	.A1(B[0]));
   XOR2_X1 U22 (.Z(SUM[0]),
	.B(A[0]),
	.A(B[0]));
endmodule

module fir_16tap (
	x, 
	clk, 
	reset, 
	y);
   input [15:0] x;
   input clk;
   input reset;
   output [31:0] y;

   // Internal wires
   wire clk__L3_N25;
   wire clk__L3_N24;
   wire clk__L3_N23;
   wire clk__L3_N22;
   wire clk__L3_N21;
   wire clk__L3_N20;
   wire clk__L3_N19;
   wire clk__L3_N18;
   wire clk__L3_N17;
   wire clk__L3_N16;
   wire clk__L3_N15;
   wire clk__L3_N14;
   wire clk__L3_N13;
   wire clk__L3_N12;
   wire clk__L3_N11;
   wire clk__L3_N10;
   wire clk__L3_N9;
   wire clk__L3_N8;
   wire clk__L3_N7;
   wire clk__L3_N6;
   wire clk__L3_N5;
   wire clk__L3_N4;
   wire clk__L3_N3;
   wire clk__L3_N2;
   wire clk__L3_N1;
   wire clk__L3_N0;
   wire clk__L2_N3;
   wire clk__L2_N2;
   wire clk__L2_N1;
   wire clk__L2_N0;
   wire clk__L1_N0;
   wire m43_9_;
   wire m43_8_;
   wire m43_7_;
   wire m43_6_;
   wire m43_5_;
   wire m43_4_;
   wire m43_3_;
   wire m43_2_;
   wire m43_20_;
   wire m43_1_;
   wire m43_19_;
   wire m43_18_;
   wire m43_17_;
   wire m43_16_;
   wire m43_15_;
   wire m43_14_;
   wire m43_13_;
   wire m43_12_;
   wire m43_11_;
   wire m43_10_;
   wire m43_0_;
   wire m42_9_;
   wire m42_8_;
   wire m42_7_;
   wire m42_6_;
   wire m42_5_;
   wire m42_4_;
   wire m42_3_;
   wire m42_2_;
   wire m42_1_;
   wire m42_19_;
   wire m42_18_;
   wire m42_17_;
   wire m42_16_;
   wire m42_15_;
   wire m42_14_;
   wire m42_13_;
   wire m42_12_;
   wire m42_11_;
   wire m42_10_;
   wire m42_0_;
   wire m40_9_;
   wire m40_8_;
   wire m40_7_;
   wire m40_6_;
   wire m40_5_;
   wire m40_4_;
   wire m40_3_;
   wire m40_2_;
   wire m40_1_;
   wire m40_19_;
   wire m40_18_;
   wire m40_17_;
   wire m40_16_;
   wire m40_15_;
   wire m40_14_;
   wire m40_13_;
   wire m40_12_;
   wire m40_11_;
   wire m40_10_;
   wire m39_9_;
   wire m39_8_;
   wire m39_7_;
   wire m39_6_;
   wire m39_5_;
   wire m39_4_;
   wire m39_3_;
   wire m39_2_;
   wire m39_1_;
   wire m39_19_;
   wire m39_18_;
   wire m39_17_;
   wire m39_16_;
   wire m39_15_;
   wire m39_14_;
   wire m39_13_;
   wire m39_12_;
   wire m39_11_;
   wire m39_10_;
   wire m39_0_;
   wire m38_9_;
   wire m38_8_;
   wire m38_7_;
   wire m38_6_;
   wire m38_5_;
   wire m38_4_;
   wire m38_3_;
   wire m38_2_;
   wire m38_1_;
   wire m38_19_;
   wire m38_18_;
   wire m38_17_;
   wire m38_16_;
   wire m38_15_;
   wire m38_14_;
   wire m38_13_;
   wire m38_12_;
   wire m38_11_;
   wire m38_10_;
   wire m38_0_;
   wire m37_9_;
   wire m37_8_;
   wire m37_7_;
   wire m37_6_;
   wire m37_5_;
   wire m37_4_;
   wire m37_3_;
   wire m37_2_;
   wire m37_20_;
   wire m37_1_;
   wire m37_19_;
   wire m37_18_;
   wire m37_17_;
   wire m37_16_;
   wire m37_15_;
   wire m37_14_;
   wire m37_13_;
   wire m37_12_;
   wire m37_11_;
   wire m37_10_;
   wire m37_0_;
   wire m36_9_;
   wire m36_8_;
   wire m36_7_;
   wire m36_6_;
   wire m36_5_;
   wire m36_4_;
   wire m36_3_;
   wire m36_2_;
   wire m36_19_;
   wire m36_18_;
   wire m36_17_;
   wire m36_16_;
   wire m36_15_;
   wire m36_14_;
   wire m36_13_;
   wire m36_12_;
   wire m36_11_;
   wire m36_10_;
   wire m35_9_;
   wire m35_8_;
   wire m35_7_;
   wire m35_6_;
   wire m35_5_;
   wire m35_4_;
   wire m35_3_;
   wire m35_2_;
   wire m35_22_;
   wire m35_21_;
   wire m35_20_;
   wire m35_1_;
   wire m35_19_;
   wire m35_18_;
   wire m35_17_;
   wire m35_16_;
   wire m35_15_;
   wire m35_14_;
   wire m35_13_;
   wire m35_12_;
   wire m35_11_;
   wire m35_10_;
   wire m35_0_;
   wire m34_9_;
   wire m34_8_;
   wire m34_7_;
   wire m34_6_;
   wire m34_5_;
   wire m34_4_;
   wire m34_3_;
   wire m34_2_;
   wire m34_1_;
   wire m34_19_;
   wire m34_18_;
   wire m34_17_;
   wire m34_16_;
   wire m34_15_;
   wire m34_14_;
   wire m34_13_;
   wire m34_12_;
   wire m34_11_;
   wire m34_10_;
   wire m34_0_;
   wire m32_9_;
   wire m32_8_;
   wire m32_7_;
   wire m32_6_;
   wire m32_5_;
   wire m32_4_;
   wire m32_3_;
   wire m32_2_;
   wire m32_1_;
   wire m32_19_;
   wire m32_18_;
   wire m32_17_;
   wire m32_16_;
   wire m32_15_;
   wire m32_14_;
   wire m32_13_;
   wire m32_12_;
   wire m32_11_;
   wire m32_10_;
   wire m31_9_;
   wire m31_8_;
   wire m31_7_;
   wire m31_6_;
   wire m31_5_;
   wire m31_4_;
   wire m31_3_;
   wire m31_2_;
   wire m31_1_;
   wire m31_18_;
   wire m31_17_;
   wire m31_16_;
   wire m31_15_;
   wire m31_14_;
   wire m31_13_;
   wire m31_12_;
   wire m31_11_;
   wire m31_10_;
   wire m30_9_;
   wire m30_8_;
   wire m30_7_;
   wire m30_6_;
   wire m30_5_;
   wire m30_4_;
   wire m30_3_;
   wire m30_2_;
   wire m30_19_;
   wire m30_18_;
   wire m30_17_;
   wire m30_16_;
   wire m30_15_;
   wire m30_14_;
   wire m30_13_;
   wire m30_12_;
   wire m30_11_;
   wire m30_10_;
   wire m29_9_;
   wire m29_8_;
   wire m29_7_;
   wire m29_6_;
   wire m29_5_;
   wire m29_4_;
   wire m29_3_;
   wire m29_20_;
   wire m29_19_;
   wire m29_18_;
   wire m29_17_;
   wire m29_16_;
   wire m29_15_;
   wire m29_14_;
   wire m29_13_;
   wire m29_12_;
   wire m29_11_;
   wire m29_10_;
   wire m27_9_;
   wire m27_8_;
   wire m27_7_;
   wire m27_6_;
   wire m27_5_;
   wire m27_4_;
   wire m27_3_;
   wire m27_2_;
   wire m27_1_;
   wire m27_19_;
   wire m27_18_;
   wire m27_17_;
   wire m27_16_;
   wire m27_15_;
   wire m27_14_;
   wire m27_13_;
   wire m27_12_;
   wire m27_11_;
   wire m27_10_;
   wire m27_0_;
   wire m26_9_;
   wire m26_8_;
   wire m26_7_;
   wire m26_6_;
   wire m26_5_;
   wire m26_4_;
   wire m26_3_;
   wire m26_2_;
   wire m26_1_;
   wire m26_18_;
   wire m26_17_;
   wire m26_16_;
   wire m26_15_;
   wire m26_14_;
   wire m26_13_;
   wire m26_12_;
   wire m26_11_;
   wire m26_10_;
   wire m26_0_;
   wire m25_9_;
   wire m25_8_;
   wire m25_7_;
   wire m25_6_;
   wire m25_5_;
   wire m25_4_;
   wire m25_3_;
   wire m25_2_;
   wire m25_20_;
   wire m25_1_;
   wire m25_19_;
   wire m25_18_;
   wire m25_17_;
   wire m25_16_;
   wire m25_15_;
   wire m25_14_;
   wire m25_13_;
   wire m25_12_;
   wire m25_11_;
   wire m25_10_;
   wire m24_9_;
   wire m24_8_;
   wire m24_7_;
   wire m24_6_;
   wire m24_5_;
   wire m24_4_;
   wire m24_3_;
   wire m24_2_;
   wire m24_1_;
   wire m24_18_;
   wire m24_17_;
   wire m24_16_;
   wire m24_15_;
   wire m24_14_;
   wire m24_13_;
   wire m24_12_;
   wire m24_11_;
   wire m24_10_;
   wire m22_9_;
   wire m22_8_;
   wire m22_7_;
   wire m22_6_;
   wire m22_5_;
   wire m22_4_;
   wire m22_3_;
   wire m22_2_;
   wire m22_1_;
   wire m22_18_;
   wire m22_17_;
   wire m22_16_;
   wire m22_15_;
   wire m22_14_;
   wire m22_13_;
   wire m22_12_;
   wire m22_11_;
   wire m22_10_;
   wire m22_0_;
   wire m18_9_;
   wire m18_8_;
   wire m18_7_;
   wire m18_6_;
   wire m18_5_;
   wire m18_4_;
   wire m18_3_;
   wire m18_2_;
   wire m18_1_;
   wire m18_17_;
   wire m18_16_;
   wire m18_15_;
   wire m18_14_;
   wire m18_13_;
   wire m18_12_;
   wire m18_11_;
   wire m18_10_;
   wire add_6_root_add_0_root_add_94_carry_4_;
   wire add_6_root_add_0_root_add_94_carry_5_;
   wire add_6_root_add_0_root_add_94_carry_6_;
   wire add_6_root_add_0_root_add_94_carry_7_;
   wire add_6_root_add_0_root_add_94_carry_8_;
   wire add_6_root_add_0_root_add_94_carry_9_;
   wire add_6_root_add_0_root_add_94_carry_10_;
   wire add_6_root_add_0_root_add_94_carry_11_;
   wire add_6_root_add_0_root_add_94_carry_12_;
   wire add_6_root_add_0_root_add_94_carry_13_;
   wire add_6_root_add_0_root_add_94_carry_14_;
   wire add_6_root_add_0_root_add_94_carry_15_;
   wire add_6_root_add_0_root_add_94_carry_16_;
   wire add_6_root_add_0_root_add_94_carry_17_;
   wire add_6_root_add_0_root_add_94_carry_18_;
   wire add_6_root_add_0_root_add_94_carry_19_;
   wire add_6_root_add_0_root_add_94_carry_20_;
   wire add_6_root_add_0_root_add_94_carry_21_;
   wire add_6_root_add_0_root_add_94_SUM_3_;
   wire add_6_root_add_0_root_add_94_SUM_4_;
   wire add_6_root_add_0_root_add_94_SUM_5_;
   wire add_6_root_add_0_root_add_94_SUM_6_;
   wire add_6_root_add_0_root_add_94_SUM_7_;
   wire add_6_root_add_0_root_add_94_SUM_8_;
   wire add_6_root_add_0_root_add_94_SUM_9_;
   wire add_6_root_add_0_root_add_94_SUM_10_;
   wire add_6_root_add_0_root_add_94_SUM_11_;
   wire add_6_root_add_0_root_add_94_SUM_12_;
   wire add_6_root_add_0_root_add_94_SUM_13_;
   wire add_6_root_add_0_root_add_94_SUM_14_;
   wire add_6_root_add_0_root_add_94_SUM_15_;
   wire add_6_root_add_0_root_add_94_SUM_16_;
   wire add_6_root_add_0_root_add_94_SUM_17_;
   wire add_6_root_add_0_root_add_94_SUM_18_;
   wire add_6_root_add_0_root_add_94_SUM_19_;
   wire add_6_root_add_0_root_add_94_SUM_20_;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n61;
   wire n62;
   wire n63;
   wire n64;
   wire n65;
   wire n66;
   wire n67;
   wire n68;
   wire n69;
   wire n70;
   wire n71;
   wire n72;
   wire n73;
   wire n74;
   wire n75;
   wire n76;
   wire n77;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;
   wire n100;
   wire n101;
   wire n102;
   wire n103;
   wire n104;
   wire n105;
   wire n106;
   wire n107;
   wire n108;
   wire n109;
   wire n110;
   wire n111;
   wire n112;
   wire n113;
   wire n114;
   wire n115;
   wire n116;
   wire n117;
   wire n118;
   wire n119;
   wire n120;
   wire n121;
   wire n122;
   wire n123;
   wire n124;
   wire n125;
   wire n126;
   wire n127;
   wire n128;
   wire n129;
   wire n130;
   wire n131;
   wire n132;
   wire SYNOPSYS_UNCONNECTED_1;
   wire SYNOPSYS_UNCONNECTED_2;
   wire SYNOPSYS_UNCONNECTED_3;
   wire SYNOPSYS_UNCONNECTED_4;
   wire SYNOPSYS_UNCONNECTED_5;
   wire SYNOPSYS_UNCONNECTED_6;
   wire SYNOPSYS_UNCONNECTED_7;
   wire SYNOPSYS_UNCONNECTED_8;
   wire SYNOPSYS_UNCONNECTED_9;
   wire SYNOPSYS_UNCONNECTED_10;
   wire SYNOPSYS_UNCONNECTED_11;
   wire SYNOPSYS_UNCONNECTED_12;
   wire SYNOPSYS_UNCONNECTED_13;
   wire SYNOPSYS_UNCONNECTED_14;
   wire SYNOPSYS_UNCONNECTED_15;
   wire SYNOPSYS_UNCONNECTED_16;
   wire SYNOPSYS_UNCONNECTED_17;
   wire SYNOPSYS_UNCONNECTED_18;
   wire SYNOPSYS_UNCONNECTED_19;
   wire SYNOPSYS_UNCONNECTED_20;
   wire SYNOPSYS_UNCONNECTED_21;
   wire SYNOPSYS_UNCONNECTED_22;
   wire SYNOPSYS_UNCONNECTED_23;
   wire SYNOPSYS_UNCONNECTED_24;
   wire SYNOPSYS_UNCONNECTED_25;
   wire SYNOPSYS_UNCONNECTED_26;
   wire SYNOPSYS_UNCONNECTED_27;
   wire SYNOPSYS_UNCONNECTED_28;
   wire SYNOPSYS_UNCONNECTED_29;
   wire SYNOPSYS_UNCONNECTED_30;
   wire SYNOPSYS_UNCONNECTED_31;
   wire SYNOPSYS_UNCONNECTED_32;
   wire SYNOPSYS_UNCONNECTED_33;
   wire SYNOPSYS_UNCONNECTED_34;
   wire SYNOPSYS_UNCONNECTED_35;
   wire SYNOPSYS_UNCONNECTED_36;
   wire SYNOPSYS_UNCONNECTED_37;
   wire SYNOPSYS_UNCONNECTED_38;
   wire SYNOPSYS_UNCONNECTED_39;
   wire SYNOPSYS_UNCONNECTED_40;
   wire SYNOPSYS_UNCONNECTED_41;
   wire SYNOPSYS_UNCONNECTED_42;
   wire SYNOPSYS_UNCONNECTED_43;
   wire SYNOPSYS_UNCONNECTED_44;
   wire [15:1] m0;
   wire [15:0] m1;
   wire [15:0] m2;
   wire [15:0] m3;
   wire [15:0] m4;
   wire [15:0] m5;
   wire [15:1] m6;
   wire [15:0] m7;
   wire [15:0] m8;
   wire [15:0] m9;
   wire [15:0] m10;
   wire [15:0] m11;
   wire [15:0] m12;
   wire [15:0] m13;
   wire [15:0] m14;
   wire [19:1] add_8_root_add_0_root_add_94_carry;
   wire [17:3] add_14_root_add_0_root_add_94_carry;
   wire [19:5] add_13_root_add_0_root_add_94_carry;
   wire [18:2] add_12_root_add_0_root_add_94_carry;
   wire [19:3] add_9_root_add_0_root_add_94_carry;

   assign y[27] = 1'b0 ;
   assign y[28] = 1'b0 ;
   assign y[29] = 1'b0 ;
   assign y[30] = 1'b0 ;
   assign y[31] = 1'b0 ;

   CLKBUF_X3 clk__L3_I25 (.Z(clk__L3_N25),
	.A(clk__L2_N3));
   CLKBUF_X3 clk__L3_I24 (.Z(clk__L3_N24),
	.A(clk__L2_N3));
   CLKBUF_X2 clk__L3_I23 (.Z(clk__L3_N23),
	.A(clk__L2_N3));
   CLKBUF_X3 clk__L3_I22 (.Z(clk__L3_N22),
	.A(clk__L2_N3));
   CLKBUF_X3 clk__L3_I21 (.Z(clk__L3_N21),
	.A(clk__L2_N3));
   CLKBUF_X3 clk__L3_I20 (.Z(clk__L3_N20),
	.A(clk__L2_N3));
   CLKBUF_X3 clk__L3_I19 (.Z(clk__L3_N19),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I18 (.Z(clk__L3_N18),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I17 (.Z(clk__L3_N17),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I16 (.Z(clk__L3_N16),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I15 (.Z(clk__L3_N15),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I14 (.Z(clk__L3_N14),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I13 (.Z(clk__L3_N13),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I12 (.Z(clk__L3_N12),
	.A(clk__L2_N2));
   CLKBUF_X3 clk__L3_I11 (.Z(clk__L3_N11),
	.A(clk__L2_N1));
   CLKBUF_X3 clk__L3_I10 (.Z(clk__L3_N10),
	.A(clk__L2_N1));
   CLKBUF_X3 clk__L3_I9 (.Z(clk__L3_N9),
	.A(clk__L2_N1));
   CLKBUF_X3 clk__L3_I8 (.Z(clk__L3_N8),
	.A(clk__L2_N1));
   CLKBUF_X3 clk__L3_I7 (.Z(clk__L3_N7),
	.A(clk__L2_N1));
   CLKBUF_X3 clk__L3_I6 (.Z(clk__L3_N6),
	.A(clk__L2_N1));
   CLKBUF_X3 clk__L3_I5 (.Z(clk__L3_N5),
	.A(clk__L2_N0));
   CLKBUF_X3 clk__L3_I4 (.Z(clk__L3_N4),
	.A(clk__L2_N0));
   CLKBUF_X3 clk__L3_I3 (.Z(clk__L3_N3),
	.A(clk__L2_N0));
   CLKBUF_X3 clk__L3_I2 (.Z(clk__L3_N2),
	.A(clk__L2_N0));
   CLKBUF_X3 clk__L3_I1 (.Z(clk__L3_N1),
	.A(clk__L2_N0));
   CLKBUF_X3 clk__L3_I0 (.Z(clk__L3_N0),
	.A(clk__L2_N0));
   CLKBUF_X3 clk__L2_I3 (.Z(clk__L2_N3),
	.A(clk__L1_N0));
   CLKBUF_X3 clk__L2_I2 (.Z(clk__L2_N2),
	.A(clk__L1_N0));
   CLKBUF_X3 clk__L2_I1 (.Z(clk__L2_N1),
	.A(clk__L1_N0));
   CLKBUF_X2 clk__L2_I0 (.Z(clk__L2_N0),
	.A(clk__L1_N0));
   CLKBUF_X3 clk__L1_I0 (.Z(clk__L1_N0),
	.A(clk));
   dff_16bit_0 q1 (.d(x),
	.clk(clk__L3_N7),
	.reset(reset),
	.q({ m0,
		m31_1_ }),
	.clk__L3_N8(clk__L3_N8),
	.clk__L3_N9(clk__L3_N9),
	.clk__L3_N10(clk__L3_N10),
	.clk__L3_N11(clk__L3_N11),
	.clk__L3_N25(clk__L3_N25));
   dff_16bit_14 q2 (.d({ m0,
		m31_1_ }),
	.clk(clk__L3_N6),
	.reset(reset),
	.q(m1),
	.clk__L3_N7(clk__L3_N7),
	.clk__L3_N8(clk__L3_N8),
	.clk__L3_N9(clk__L3_N9),
	.clk__L3_N10(clk__L3_N10),
	.clk__L3_N11(clk__L3_N11),
	.clk__L3_N21(clk__L3_N21));
   dff_16bit_13 q3 (.d(m1),
	.clk(clk__L3_N6),
	.reset(reset),
	.q(m2),
	.clk__L3_N7(clk__L3_N7),
	.clk__L3_N8(clk__L3_N8),
	.clk__L3_N9(clk__L3_N9),
	.clk__L3_N10(clk__L3_N10),
	.clk__L3_N11(clk__L3_N11),
	.clk__L3_N21(clk__L3_N21),
	.clk__L3_N22(clk__L3_N22),
	.clk__L3_N24(clk__L3_N24));
   dff_16bit_12 q4 (.d(m2),
	.clk(clk__L3_N6),
	.reset(reset),
	.q(m3),
	.clk__L3_N9(clk__L3_N9),
	.clk__L3_N10(clk__L3_N10),
	.clk__L3_N11(clk__L3_N11),
	.clk__L3_N21(clk__L3_N21),
	.clk__L3_N22(clk__L3_N22),
	.clk__L3_N23(clk__L3_N23));
   dff_16bit_11 q5 (.d(m3),
	.clk(clk__L3_N9),
	.reset(reset),
	.q(m4),
	.clk__L3_N20(clk__L3_N20),
	.clk__L3_N22(clk__L3_N22),
	.clk__L3_N24(clk__L3_N24),
	.clk__L3_N25(clk__L3_N25));
   dff_16bit_10 q6 (.d(m4),
	.clk(clk__L3_N21),
	.reset(reset),
	.q(m5),
	.clk__L3_N23(clk__L3_N23),
	.clk__L3_N24(clk__L3_N24),
	.clk__L3_N25(clk__L3_N25));
   dff_16bit_9 q7 (.d(m5),
	.clk(clk__L3_N3),
	.reset(reset),
	.q({ m6,
		m29_3_ }),
	.clk__L3_N20(clk__L3_N20),
	.clk__L3_N23(clk__L3_N23));
   dff_16bit_8 q8 (.d({ m6,
		m29_3_ }),
	.clk(clk__L3_N0),
	.reset(reset),
	.q(m7),
	.clk__L3_N3(clk__L3_N3),
	.clk__L3_N4(clk__L3_N4));
   dff_16bit_7 q9 (.d(m7),
	.clk(clk__L3_N1),
	.reset(reset),
	.q(m8),
	.clk__L3_N2(clk__L3_N2),
	.clk__L3_N5(clk__L3_N5),
	.clk__L3_N15(clk__L3_N15),
	.clk__L3_N18(clk__L3_N18),
	.clk__L3_N19(clk__L3_N19));
   dff_16bit_6 q10 (.d(m8),
	.clk(clk__L3_N2),
	.reset(reset),
	.q(m9),
	.clk__L3_N13(clk__L3_N13),
	.clk__L3_N14(clk__L3_N14),
	.clk__L3_N15(clk__L3_N15),
	.clk__L3_N17(clk__L3_N17),
	.clk__L3_N18(clk__L3_N18));
   dff_16bit_5 q11 (.d(m9),
	.clk(clk__L3_N1),
	.reset(reset),
	.q(m10),
	.clk__L3_N2(clk__L3_N2),
	.clk__L3_N5(clk__L3_N5),
	.clk__L3_N18(clk__L3_N18),
	.clk__L3_N19(clk__L3_N19));
   dff_16bit_4 q12 (.d(m10),
	.clk(clk__L3_N1),
	.reset(reset),
	.q(m11),
	.clk__L3_N2(clk__L3_N2),
	.clk__L3_N13(clk__L3_N13),
	.clk__L3_N14(clk__L3_N14),
	.clk__L3_N15(clk__L3_N15),
	.clk__L3_N16(clk__L3_N16),
	.clk__L3_N17(clk__L3_N17),
	.clk__L3_N18(clk__L3_N18));
   dff_16bit_3 q13 (.d(m11),
	.clk(clk__L3_N2),
	.reset(reset),
	.q(m12),
	.clk__L3_N12(clk__L3_N12),
	.clk__L3_N16(clk__L3_N16));
   dff_16bit_2 q14 (.d(m12),
	.clk(clk__L3_N13),
	.reset(reset),
	.q(m13),
	.clk__L3_N14(clk__L3_N14),
	.clk__L3_N15(clk__L3_N15),
	.clk__L3_N16(clk__L3_N16),
	.clk__L3_N17(clk__L3_N17));
   dff_16bit_1 q15 (.d(m13),
	.clk(clk__L3_N0),
	.reset(reset),
	.q(m14),
	.clk__L3_N1(clk__L3_N1),
	.clk__L3_N4(clk__L3_N4),
	.clk__L3_N5(clk__L3_N5));
   fir_16tap_DW_mult_uns_10 mult_73 (.a(m10),
	.b({ 1'b1,
		1'b1,
		1'b0,
		1'b0 }),
	.product({ m36_19_,
		m36_18_,
		m36_17_,
		m36_16_,
		m36_15_,
		m36_14_,
		m36_13_,
		m36_12_,
		m36_11_,
		m36_10_,
		m36_9_,
		m36_8_,
		m36_7_,
		m36_6_,
		m36_5_,
		m36_4_,
		m36_3_,
		m36_2_,
		SYNOPSYS_UNCONNECTED_1,
		SYNOPSYS_UNCONNECTED_2 }));
   fir_16tap_DW_mult_uns_9 mult_70 (.a(m7),
	.b({ 1'b1,
		1'b0,
		1'b0,
		1'b1 }),
	.product({ m30_19_,
		m30_18_,
		m30_17_,
		m30_16_,
		m30_15_,
		m30_14_,
		m30_13_,
		m30_12_,
		m30_11_,
		m30_10_,
		m30_9_,
		m30_8_,
		m30_7_,
		m30_6_,
		m30_5_,
		m30_4_,
		m30_3_,
		m30_2_,
		m37_1_,
		m37_0_ }));
   fir_16tap_DW_mult_uns_8 mult_64 (.a(m1),
	.b({ 1'b1,
		1'b1 }),
	.product({ m18_17_,
		m18_16_,
		m18_15_,
		m18_14_,
		m18_13_,
		m18_12_,
		m18_11_,
		m18_10_,
		m18_9_,
		m18_8_,
		m18_7_,
		m18_6_,
		m18_5_,
		m18_4_,
		m18_3_,
		m18_2_,
		m18_1_,
		m39_0_ }));
   fir_16tap_DW_mult_uns_7 mult_67 (.a(m4),
	.b({ 1'b1,
		1'b1,
		1'b0 }),
	.product({ m24_18_,
		m24_17_,
		m24_16_,
		m24_15_,
		m24_14_,
		m24_13_,
		m24_12_,
		m24_11_,
		m24_10_,
		m24_9_,
		m24_8_,
		m24_7_,
		m24_6_,
		m24_5_,
		m24_4_,
		m24_3_,
		m24_2_,
		m24_1_,
		SYNOPSYS_UNCONNECTED_3 }));
   fir_16tap_DW01_add_12 add_3_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		m37_20_,
		m37_19_,
		m37_18_,
		m37_17_,
		m37_16_,
		m37_15_,
		m37_14_,
		m37_13_,
		m37_12_,
		m37_11_,
		m37_10_,
		m37_9_,
		m37_8_,
		m37_7_,
		m37_6_,
		m37_5_,
		m37_4_,
		m37_3_,
		m37_2_,
		m37_1_,
		m37_0_ }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		m39_19_,
		m39_18_,
		m39_17_,
		m39_16_,
		m39_15_,
		m39_14_,
		m39_13_,
		m39_12_,
		m39_11_,
		m39_10_,
		m39_9_,
		m39_8_,
		m39_7_,
		m39_6_,
		m39_5_,
		m39_4_,
		m39_3_,
		m39_2_,
		m39_1_,
		m39_0_ }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_4,
		SYNOPSYS_UNCONNECTED_5,
		SYNOPSYS_UNCONNECTED_6,
		SYNOPSYS_UNCONNECTED_7,
		SYNOPSYS_UNCONNECTED_8,
		SYNOPSYS_UNCONNECTED_9,
		SYNOPSYS_UNCONNECTED_10,
		SYNOPSYS_UNCONNECTED_11,
		n81,
		n80,
		n79,
		n78,
		n77,
		n76,
		n75,
		n74,
		n73,
		n72,
		n71,
		n70,
		n69,
		n68,
		n67,
		n66,
		n65,
		n64,
		n63,
		n62,
		n61,
		n60 }));
   fir_16tap_DW_mult_uns_6 mult_68 (.a(m5),
	.b({ 1'b1,
		1'b1,
		1'b1 }),
	.product({ m26_18_,
		m26_17_,
		m26_16_,
		m26_15_,
		m26_14_,
		m26_13_,
		m26_12_,
		m26_11_,
		m26_10_,
		m26_9_,
		m26_8_,
		m26_7_,
		m26_6_,
		m26_5_,
		m26_4_,
		m26_3_,
		m26_2_,
		m26_1_,
		m26_0_ }));
   fir_16tap_DW_mult_uns_5 mult_66 (.a(m3),
	.b({ 1'b1,
		1'b0,
		1'b1 }),
	.product({ m22_18_,
		m22_17_,
		m22_16_,
		m22_15_,
		m22_14_,
		m22_13_,
		m22_12_,
		m22_11_,
		m22_10_,
		m22_9_,
		m22_8_,
		m22_7_,
		m22_6_,
		m22_5_,
		m22_4_,
		m22_3_,
		m22_2_,
		m22_1_,
		m22_0_ }));
   fir_16tap_DW01_add_11 add_11_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		m26_18_,
		m26_17_,
		m26_16_,
		m26_15_,
		m26_14_,
		m26_13_,
		m26_12_,
		m26_11_,
		m26_10_,
		m26_9_,
		m26_8_,
		m26_7_,
		m26_6_,
		m26_5_,
		m26_4_,
		m26_3_,
		m26_2_,
		m26_1_,
		m26_0_ }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		m22_18_,
		m22_17_,
		m22_16_,
		m22_15_,
		m22_14_,
		m22_13_,
		m22_12_,
		m22_11_,
		m22_10_,
		m22_9_,
		m22_8_,
		m22_7_,
		m22_6_,
		m22_5_,
		m22_4_,
		m22_3_,
		m22_2_,
		m22_1_,
		m22_0_ }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_12,
		SYNOPSYS_UNCONNECTED_13,
		SYNOPSYS_UNCONNECTED_14,
		m27_19_,
		m27_18_,
		m27_17_,
		m27_16_,
		m27_15_,
		m27_14_,
		m27_13_,
		m27_12_,
		m27_11_,
		m27_10_,
		m27_9_,
		m27_8_,
		m27_7_,
		m27_6_,
		m27_5_,
		m27_4_,
		m27_3_,
		m27_2_,
		m27_1_,
		m27_0_ }));
   fir_16tap_DW_mult_uns_4 mult_74 (.a(m11),
	.b({ 1'b1,
		1'b1,
		1'b0,
		1'b1 }),
	.product({ m38_19_,
		m38_18_,
		m38_17_,
		m38_16_,
		m38_15_,
		m38_14_,
		m38_13_,
		m38_12_,
		m38_11_,
		m38_10_,
		m38_9_,
		m38_8_,
		m38_7_,
		m38_6_,
		m38_5_,
		m38_4_,
		m38_3_,
		m38_2_,
		m38_1_,
		m38_0_ }));
   fir_16tap_DW_mult_uns_3 mult_71 (.a(m8),
	.b({ 1'b1,
		1'b0,
		1'b1,
		1'b0 }),
	.product({ m32_19_,
		m32_18_,
		m32_17_,
		m32_16_,
		m32_15_,
		m32_14_,
		m32_13_,
		m32_12_,
		m32_11_,
		m32_10_,
		m32_9_,
		m32_8_,
		m32_7_,
		m32_6_,
		m32_5_,
		m32_4_,
		m32_3_,
		m32_2_,
		m32_1_,
		SYNOPSYS_UNCONNECTED_15 }));
   fir_16tap_DW_mult_uns_2 mult_75 (.a(m12),
	.b({ 1'b1,
		1'b1,
		1'b1,
		1'b0 }),
	.product({ m40_19_,
		m40_18_,
		m40_17_,
		m40_16_,
		m40_15_,
		m40_14_,
		m40_13_,
		m40_12_,
		m40_11_,
		m40_10_,
		m40_9_,
		m40_8_,
		m40_7_,
		m40_6_,
		m40_5_,
		m40_4_,
		m40_3_,
		m40_2_,
		m40_1_,
		SYNOPSYS_UNCONNECTED_16 }));
   fir_16tap_DW01_add_8 add_10_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		m32_19_,
		m32_18_,
		m32_17_,
		m32_16_,
		m32_15_,
		m32_14_,
		m32_13_,
		m32_12_,
		m32_11_,
		m32_10_,
		m32_9_,
		m32_8_,
		m32_7_,
		m32_6_,
		m32_5_,
		m32_4_,
		m32_3_,
		m32_2_,
		m32_1_,
		1'b0 }),
	.B({ 1'b0,
		1'b0,
		m40_19_,
		m40_18_,
		m40_17_,
		m40_16_,
		m40_15_,
		m40_14_,
		m40_13_,
		m40_12_,
		m40_11_,
		m40_10_,
		m40_9_,
		m40_8_,
		m40_7_,
		m40_6_,
		m40_5_,
		m40_4_,
		m40_3_,
		m40_2_,
		m40_1_,
		1'b0 }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_17,
		m25_20_,
		m25_19_,
		m25_18_,
		m25_17_,
		m25_16_,
		m25_15_,
		m25_14_,
		m25_13_,
		m25_12_,
		m25_11_,
		m25_10_,
		m25_9_,
		m25_8_,
		m25_7_,
		m25_6_,
		m25_5_,
		m25_4_,
		m25_3_,
		m25_2_,
		m25_1_,
		SYNOPSYS_UNCONNECTED_18 }));
   fir_16tap_DW01_add_7 add_7_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		m38_19_,
		m38_18_,
		m38_17_,
		m38_16_,
		m38_15_,
		m38_14_,
		m38_13_,
		m38_12_,
		m38_11_,
		m38_10_,
		m38_9_,
		m38_8_,
		m38_7_,
		m38_6_,
		m38_5_,
		m38_4_,
		m38_3_,
		m38_2_,
		m38_1_,
		m38_0_ }),
	.B({ 1'b0,
		1'b0,
		m25_20_,
		m25_19_,
		m25_18_,
		m25_17_,
		m25_16_,
		m25_15_,
		m25_14_,
		m25_13_,
		m25_12_,
		m25_11_,
		m25_10_,
		m25_9_,
		m25_8_,
		m25_7_,
		m25_6_,
		m25_5_,
		m25_4_,
		m25_3_,
		m25_2_,
		m25_1_,
		1'b0 }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_19,
		n35,
		n34,
		n33,
		n32,
		n31,
		n30,
		n29,
		n28,
		n27,
		n26,
		n25,
		n24,
		n23,
		n22,
		n21,
		n20,
		n19,
		n18,
		n17,
		n16,
		n15,
		n14 }));
   fir_16tap_DW01_add_5 add_5_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		n35,
		n34,
		n33,
		n32,
		n31,
		n30,
		n29,
		n28,
		n27,
		n26,
		n25,
		n24,
		n23,
		n22,
		n21,
		n20,
		n19,
		n18,
		n17,
		n16,
		n15,
		n14 }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		m31_18_,
		m31_17_,
		m31_16_,
		m31_15_,
		m31_14_,
		m31_13_,
		m31_12_,
		m31_11_,
		m31_10_,
		m31_9_,
		m31_8_,
		m31_7_,
		m31_6_,
		m31_5_,
		m31_4_,
		m31_3_,
		m31_2_,
		m31_1_,
		1'b0 }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_20,
		SYNOPSYS_UNCONNECTED_21,
		SYNOPSYS_UNCONNECTED_22,
		SYNOPSYS_UNCONNECTED_23,
		m35_22_,
		m35_21_,
		m35_20_,
		m35_19_,
		m35_18_,
		m35_17_,
		m35_16_,
		m35_15_,
		m35_14_,
		m35_13_,
		m35_12_,
		m35_11_,
		m35_10_,
		m35_9_,
		m35_8_,
		m35_7_,
		m35_6_,
		m35_5_,
		m35_4_,
		m35_3_,
		m35_2_,
		m35_1_,
		m35_0_ }));
   fir_16tap_DW01_add_4 add_4_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		add_6_root_add_0_root_add_94_carry_21_,
		add_6_root_add_0_root_add_94_SUM_20_,
		add_6_root_add_0_root_add_94_SUM_19_,
		add_6_root_add_0_root_add_94_SUM_18_,
		add_6_root_add_0_root_add_94_SUM_17_,
		add_6_root_add_0_root_add_94_SUM_16_,
		add_6_root_add_0_root_add_94_SUM_15_,
		add_6_root_add_0_root_add_94_SUM_14_,
		add_6_root_add_0_root_add_94_SUM_13_,
		add_6_root_add_0_root_add_94_SUM_12_,
		add_6_root_add_0_root_add_94_SUM_11_,
		add_6_root_add_0_root_add_94_SUM_10_,
		add_6_root_add_0_root_add_94_SUM_9_,
		add_6_root_add_0_root_add_94_SUM_8_,
		add_6_root_add_0_root_add_94_SUM_7_,
		add_6_root_add_0_root_add_94_SUM_6_,
		add_6_root_add_0_root_add_94_SUM_5_,
		add_6_root_add_0_root_add_94_SUM_4_,
		add_6_root_add_0_root_add_94_SUM_3_,
		m27_2_,
		m27_1_,
		m27_0_ }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		m35_22_,
		m35_21_,
		m35_20_,
		m35_19_,
		m35_18_,
		m35_17_,
		m35_16_,
		m35_15_,
		m35_14_,
		m35_13_,
		m35_12_,
		m35_11_,
		m35_10_,
		m35_9_,
		m35_8_,
		m35_7_,
		m35_6_,
		m35_5_,
		m35_4_,
		m35_3_,
		m35_2_,
		m35_1_,
		m35_0_ }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_24,
		SYNOPSYS_UNCONNECTED_25,
		SYNOPSYS_UNCONNECTED_26,
		SYNOPSYS_UNCONNECTED_27,
		n59,
		n58,
		n57,
		n56,
		n55,
		n54,
		n53,
		n52,
		n51,
		n50,
		n49,
		n48,
		n47,
		n46,
		n45,
		n44,
		n43,
		n42,
		n41,
		n40,
		n39,
		n38,
		n37,
		n36 }));
   fir_16tap_DW01_add_3 add_2_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		n59,
		n58,
		n57,
		n56,
		n55,
		n54,
		n53,
		n52,
		n51,
		n50,
		n49,
		n48,
		n47,
		n46,
		n45,
		n44,
		n43,
		n42,
		n41,
		n40,
		n39,
		n38,
		n37,
		n36 }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		n81,
		n80,
		n79,
		n78,
		n77,
		n76,
		n75,
		n74,
		n73,
		n72,
		n71,
		n70,
		n69,
		n68,
		n67,
		n66,
		n65,
		n64,
		n63,
		n62,
		n61,
		n60 }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_28,
		SYNOPSYS_UNCONNECTED_29,
		SYNOPSYS_UNCONNECTED_30,
		SYNOPSYS_UNCONNECTED_31,
		SYNOPSYS_UNCONNECTED_32,
		SYNOPSYS_UNCONNECTED_33,
		n106,
		n105,
		n104,
		n103,
		n102,
		n101,
		n100,
		n99,
		n98,
		n97,
		n96,
		n95,
		n94,
		n93,
		n92,
		n91,
		n90,
		n89,
		n88,
		n87,
		n86,
		n85,
		n84,
		n83,
		n82 }));
   fir_16tap_DW_mult_uns_1 mult_72 (.a(m9),
	.b({ 1'b1,
		1'b0,
		1'b1,
		1'b1 }),
	.product({ m34_19_,
		m34_18_,
		m34_17_,
		m34_16_,
		m34_15_,
		m34_14_,
		m34_13_,
		m34_12_,
		m34_11_,
		m34_10_,
		m34_9_,
		m34_8_,
		m34_7_,
		m34_6_,
		m34_5_,
		m34_4_,
		m34_3_,
		m34_2_,
		m34_1_,
		m34_0_ }));
   fir_16tap_DW_mult_uns_0 mult_76 (.a(m13),
	.b({ 1'b1,
		1'b1,
		1'b1,
		1'b1 }),
	.product({ m42_19_,
		m42_18_,
		m42_17_,
		m42_16_,
		m42_15_,
		m42_14_,
		m42_13_,
		m42_12_,
		m42_11_,
		m42_10_,
		m42_9_,
		m42_8_,
		m42_7_,
		m42_6_,
		m42_5_,
		m42_4_,
		m42_3_,
		m42_2_,
		m42_1_,
		m42_0_ }));
   fir_16tap_DW01_add_1 add_1_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		m43_20_,
		m43_19_,
		m43_18_,
		m43_17_,
		m43_16_,
		m43_15_,
		m43_14_,
		m43_13_,
		m43_12_,
		m43_11_,
		m43_10_,
		m43_9_,
		m43_8_,
		m43_7_,
		m43_6_,
		m43_5_,
		m43_4_,
		m43_3_,
		m43_2_,
		m43_1_,
		m43_0_ }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		n106,
		n105,
		n104,
		n103,
		n102,
		n101,
		n100,
		n99,
		n98,
		n97,
		n96,
		n95,
		n94,
		n93,
		n92,
		n91,
		n90,
		n89,
		n88,
		n87,
		n86,
		n85,
		n84,
		n83,
		n82 }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_34,
		SYNOPSYS_UNCONNECTED_35,
		SYNOPSYS_UNCONNECTED_36,
		SYNOPSYS_UNCONNECTED_37,
		SYNOPSYS_UNCONNECTED_38,
		SYNOPSYS_UNCONNECTED_39,
		n132,
		n131,
		n130,
		n129,
		n128,
		n127,
		n126,
		n125,
		n124,
		n123,
		n122,
		n121,
		n120,
		n119,
		n118,
		n117,
		n116,
		n115,
		n114,
		n113,
		n112,
		n111,
		n110,
		n109,
		n108,
		n107 }));
   fir_16tap_DW01_add_0 add_0_root_add_0_root_add_94 (.A({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		n132,
		n131,
		n130,
		n129,
		n128,
		n127,
		n126,
		n125,
		n124,
		n123,
		n122,
		n121,
		n120,
		n119,
		n118,
		n117,
		n116,
		n115,
		n114,
		n113,
		n112,
		n111,
		n110,
		n109,
		n108,
		n107 }),
	.B({ 1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		1'b0,
		x }),
	.CI(1'b0),
	.SUM({ SYNOPSYS_UNCONNECTED_40,
		SYNOPSYS_UNCONNECTED_41,
		SYNOPSYS_UNCONNECTED_42,
		SYNOPSYS_UNCONNECTED_43,
		SYNOPSYS_UNCONNECTED_44,
		y[26],
		y[25],
		y[24],
		y[23],
		y[22],
		y[21],
		y[20],
		y[19],
		y[18],
		y[17],
		y[16],
		y[15],
		y[14],
		y[13],
		y[12],
		y[11],
		y[10],
		y[9],
		y[8],
		y[7],
		y[6],
		y[5],
		y[4],
		y[3],
		y[2],
		y[1],
		y[0] }));
   FA_X1 add_8_root_add_0_root_add_94_U1_1 (.S(m43_1_),
	.CO(add_8_root_add_0_root_add_94_carry[2]),
	.CI(add_8_root_add_0_root_add_94_carry[1]),
	.B(m42_1_),
	.A(m34_1_));
   FA_X1 add_8_root_add_0_root_add_94_U1_2 (.S(m43_2_),
	.CO(add_8_root_add_0_root_add_94_carry[3]),
	.CI(add_8_root_add_0_root_add_94_carry[2]),
	.B(m42_2_),
	.A(m34_2_));
   FA_X1 add_8_root_add_0_root_add_94_U1_3 (.S(m43_3_),
	.CO(add_8_root_add_0_root_add_94_carry[4]),
	.CI(add_8_root_add_0_root_add_94_carry[3]),
	.B(m42_3_),
	.A(m34_3_));
   FA_X1 add_8_root_add_0_root_add_94_U1_4 (.S(m43_4_),
	.CO(add_8_root_add_0_root_add_94_carry[5]),
	.CI(add_8_root_add_0_root_add_94_carry[4]),
	.B(m42_4_),
	.A(m34_4_));
   FA_X1 add_8_root_add_0_root_add_94_U1_5 (.S(m43_5_),
	.CO(add_8_root_add_0_root_add_94_carry[6]),
	.CI(add_8_root_add_0_root_add_94_carry[5]),
	.B(m42_5_),
	.A(m34_5_));
   FA_X1 add_8_root_add_0_root_add_94_U1_6 (.S(m43_6_),
	.CO(add_8_root_add_0_root_add_94_carry[7]),
	.CI(add_8_root_add_0_root_add_94_carry[6]),
	.B(m42_6_),
	.A(m34_6_));
   FA_X1 add_8_root_add_0_root_add_94_U1_7 (.S(m43_7_),
	.CO(add_8_root_add_0_root_add_94_carry[8]),
	.CI(add_8_root_add_0_root_add_94_carry[7]),
	.B(m42_7_),
	.A(m34_7_));
   FA_X1 add_8_root_add_0_root_add_94_U1_8 (.S(m43_8_),
	.CO(add_8_root_add_0_root_add_94_carry[9]),
	.CI(add_8_root_add_0_root_add_94_carry[8]),
	.B(m42_8_),
	.A(m34_8_));
   FA_X1 add_8_root_add_0_root_add_94_U1_9 (.S(m43_9_),
	.CO(add_8_root_add_0_root_add_94_carry[10]),
	.CI(add_8_root_add_0_root_add_94_carry[9]),
	.B(m42_9_),
	.A(m34_9_));
   FA_X1 add_8_root_add_0_root_add_94_U1_10 (.S(m43_10_),
	.CO(add_8_root_add_0_root_add_94_carry[11]),
	.CI(add_8_root_add_0_root_add_94_carry[10]),
	.B(m42_10_),
	.A(m34_10_));
   FA_X1 add_8_root_add_0_root_add_94_U1_11 (.S(m43_11_),
	.CO(add_8_root_add_0_root_add_94_carry[12]),
	.CI(add_8_root_add_0_root_add_94_carry[11]),
	.B(m42_11_),
	.A(m34_11_));
   FA_X1 add_8_root_add_0_root_add_94_U1_12 (.S(m43_12_),
	.CO(add_8_root_add_0_root_add_94_carry[13]),
	.CI(add_8_root_add_0_root_add_94_carry[12]),
	.B(m42_12_),
	.A(m34_12_));
   FA_X1 add_8_root_add_0_root_add_94_U1_13 (.S(m43_13_),
	.CO(add_8_root_add_0_root_add_94_carry[14]),
	.CI(add_8_root_add_0_root_add_94_carry[13]),
	.B(m42_13_),
	.A(m34_13_));
   FA_X1 add_8_root_add_0_root_add_94_U1_14 (.S(m43_14_),
	.CO(add_8_root_add_0_root_add_94_carry[15]),
	.CI(add_8_root_add_0_root_add_94_carry[14]),
	.B(m42_14_),
	.A(m34_14_));
   FA_X1 add_8_root_add_0_root_add_94_U1_15 (.S(m43_15_),
	.CO(add_8_root_add_0_root_add_94_carry[16]),
	.CI(add_8_root_add_0_root_add_94_carry[15]),
	.B(m42_15_),
	.A(m34_15_));
   FA_X1 add_8_root_add_0_root_add_94_U1_16 (.S(m43_16_),
	.CO(add_8_root_add_0_root_add_94_carry[17]),
	.CI(add_8_root_add_0_root_add_94_carry[16]),
	.B(m42_16_),
	.A(m34_16_));
   FA_X1 add_8_root_add_0_root_add_94_U1_17 (.S(m43_17_),
	.CO(add_8_root_add_0_root_add_94_carry[18]),
	.CI(add_8_root_add_0_root_add_94_carry[17]),
	.B(m42_17_),
	.A(m34_17_));
   FA_X1 add_8_root_add_0_root_add_94_U1_18 (.S(m43_18_),
	.CO(add_8_root_add_0_root_add_94_carry[19]),
	.CI(add_8_root_add_0_root_add_94_carry[18]),
	.B(m42_18_),
	.A(m34_18_));
   FA_X1 add_8_root_add_0_root_add_94_U1_19 (.S(m43_19_),
	.CO(m43_20_),
	.CI(add_8_root_add_0_root_add_94_carry[19]),
	.B(m42_19_),
	.A(m34_19_));
   FA_X1 add_14_root_add_0_root_add_94_U1_3 (.S(m31_3_),
	.CO(add_14_root_add_0_root_add_94_carry[4]),
	.CI(add_14_root_add_0_root_add_94_carry[3]),
	.B(m2[1]),
	.A(m0[2]));
   FA_X1 add_14_root_add_0_root_add_94_U1_4 (.S(m31_4_),
	.CO(add_14_root_add_0_root_add_94_carry[5]),
	.CI(add_14_root_add_0_root_add_94_carry[4]),
	.B(m2[2]),
	.A(m0[3]));
   FA_X1 add_14_root_add_0_root_add_94_U1_5 (.S(m31_5_),
	.CO(add_14_root_add_0_root_add_94_carry[6]),
	.CI(add_14_root_add_0_root_add_94_carry[5]),
	.B(m2[3]),
	.A(m0[4]));
   FA_X1 add_14_root_add_0_root_add_94_U1_6 (.S(m31_6_),
	.CO(add_14_root_add_0_root_add_94_carry[7]),
	.CI(add_14_root_add_0_root_add_94_carry[6]),
	.B(m2[4]),
	.A(m0[5]));
   FA_X1 add_14_root_add_0_root_add_94_U1_7 (.S(m31_7_),
	.CO(add_14_root_add_0_root_add_94_carry[8]),
	.CI(add_14_root_add_0_root_add_94_carry[7]),
	.B(m2[5]),
	.A(m0[6]));
   FA_X1 add_14_root_add_0_root_add_94_U1_8 (.S(m31_8_),
	.CO(add_14_root_add_0_root_add_94_carry[9]),
	.CI(add_14_root_add_0_root_add_94_carry[8]),
	.B(m2[6]),
	.A(m0[7]));
   FA_X1 add_14_root_add_0_root_add_94_U1_9 (.S(m31_9_),
	.CO(add_14_root_add_0_root_add_94_carry[10]),
	.CI(add_14_root_add_0_root_add_94_carry[9]),
	.B(m2[7]),
	.A(m0[8]));
   FA_X1 add_14_root_add_0_root_add_94_U1_10 (.S(m31_10_),
	.CO(add_14_root_add_0_root_add_94_carry[11]),
	.CI(add_14_root_add_0_root_add_94_carry[10]),
	.B(m2[8]),
	.A(m0[9]));
   FA_X1 add_14_root_add_0_root_add_94_U1_11 (.S(m31_11_),
	.CO(add_14_root_add_0_root_add_94_carry[12]),
	.CI(add_14_root_add_0_root_add_94_carry[11]),
	.B(m2[9]),
	.A(m0[10]));
   FA_X1 add_14_root_add_0_root_add_94_U1_12 (.S(m31_12_),
	.CO(add_14_root_add_0_root_add_94_carry[13]),
	.CI(add_14_root_add_0_root_add_94_carry[12]),
	.B(m2[10]),
	.A(m0[11]));
   FA_X1 add_14_root_add_0_root_add_94_U1_13 (.S(m31_13_),
	.CO(add_14_root_add_0_root_add_94_carry[14]),
	.CI(add_14_root_add_0_root_add_94_carry[13]),
	.B(m2[11]),
	.A(m0[12]));
   FA_X1 add_14_root_add_0_root_add_94_U1_14 (.S(m31_14_),
	.CO(add_14_root_add_0_root_add_94_carry[15]),
	.CI(add_14_root_add_0_root_add_94_carry[14]),
	.B(m2[12]),
	.A(m0[13]));
   FA_X1 add_14_root_add_0_root_add_94_U1_15 (.S(m31_15_),
	.CO(add_14_root_add_0_root_add_94_carry[16]),
	.CI(add_14_root_add_0_root_add_94_carry[15]),
	.B(m2[13]),
	.A(m0[14]));
   FA_X1 add_14_root_add_0_root_add_94_U1_16 (.S(m31_16_),
	.CO(add_14_root_add_0_root_add_94_carry[17]),
	.CI(add_14_root_add_0_root_add_94_carry[16]),
	.B(m2[14]),
	.A(m0[15]));
   FA_X1 add_6_root_add_0_root_add_94_U1_4 (.S(add_6_root_add_0_root_add_94_SUM_4_),
	.CO(add_6_root_add_0_root_add_94_carry_5_),
	.CI(add_6_root_add_0_root_add_94_carry_4_),
	.B(m29_4_),
	.A(m27_4_));
   FA_X1 add_6_root_add_0_root_add_94_U1_5 (.S(add_6_root_add_0_root_add_94_SUM_5_),
	.CO(add_6_root_add_0_root_add_94_carry_6_),
	.CI(add_6_root_add_0_root_add_94_carry_5_),
	.B(m29_5_),
	.A(m27_5_));
   FA_X1 add_6_root_add_0_root_add_94_U1_6 (.S(add_6_root_add_0_root_add_94_SUM_6_),
	.CO(add_6_root_add_0_root_add_94_carry_7_),
	.CI(add_6_root_add_0_root_add_94_carry_6_),
	.B(m29_6_),
	.A(m27_6_));
   FA_X1 add_6_root_add_0_root_add_94_U1_7 (.S(add_6_root_add_0_root_add_94_SUM_7_),
	.CO(add_6_root_add_0_root_add_94_carry_8_),
	.CI(add_6_root_add_0_root_add_94_carry_7_),
	.B(m29_7_),
	.A(m27_7_));
   FA_X1 add_6_root_add_0_root_add_94_U1_8 (.S(add_6_root_add_0_root_add_94_SUM_8_),
	.CO(add_6_root_add_0_root_add_94_carry_9_),
	.CI(add_6_root_add_0_root_add_94_carry_8_),
	.B(m29_8_),
	.A(m27_8_));
   FA_X1 add_6_root_add_0_root_add_94_U1_9 (.S(add_6_root_add_0_root_add_94_SUM_9_),
	.CO(add_6_root_add_0_root_add_94_carry_10_),
	.CI(add_6_root_add_0_root_add_94_carry_9_),
	.B(m29_9_),
	.A(m27_9_));
   FA_X1 add_6_root_add_0_root_add_94_U1_10 (.S(add_6_root_add_0_root_add_94_SUM_10_),
	.CO(add_6_root_add_0_root_add_94_carry_11_),
	.CI(add_6_root_add_0_root_add_94_carry_10_),
	.B(m29_10_),
	.A(m27_10_));
   FA_X1 add_6_root_add_0_root_add_94_U1_11 (.S(add_6_root_add_0_root_add_94_SUM_11_),
	.CO(add_6_root_add_0_root_add_94_carry_12_),
	.CI(add_6_root_add_0_root_add_94_carry_11_),
	.B(m29_11_),
	.A(m27_11_));
   FA_X1 add_6_root_add_0_root_add_94_U1_12 (.S(add_6_root_add_0_root_add_94_SUM_12_),
	.CO(add_6_root_add_0_root_add_94_carry_13_),
	.CI(add_6_root_add_0_root_add_94_carry_12_),
	.B(m29_12_),
	.A(m27_12_));
   FA_X1 add_6_root_add_0_root_add_94_U1_13 (.S(add_6_root_add_0_root_add_94_SUM_13_),
	.CO(add_6_root_add_0_root_add_94_carry_14_),
	.CI(add_6_root_add_0_root_add_94_carry_13_),
	.B(m29_13_),
	.A(m27_13_));
   FA_X1 add_6_root_add_0_root_add_94_U1_14 (.S(add_6_root_add_0_root_add_94_SUM_14_),
	.CO(add_6_root_add_0_root_add_94_carry_15_),
	.CI(add_6_root_add_0_root_add_94_carry_14_),
	.B(m29_14_),
	.A(m27_14_));
   FA_X1 add_6_root_add_0_root_add_94_U1_15 (.S(add_6_root_add_0_root_add_94_SUM_15_),
	.CO(add_6_root_add_0_root_add_94_carry_16_),
	.CI(add_6_root_add_0_root_add_94_carry_15_),
	.B(m29_15_),
	.A(m27_15_));
   FA_X1 add_6_root_add_0_root_add_94_U1_16 (.S(add_6_root_add_0_root_add_94_SUM_16_),
	.CO(add_6_root_add_0_root_add_94_carry_17_),
	.CI(add_6_root_add_0_root_add_94_carry_16_),
	.B(m29_16_),
	.A(m27_16_));
   FA_X1 add_6_root_add_0_root_add_94_U1_17 (.S(add_6_root_add_0_root_add_94_SUM_17_),
	.CO(add_6_root_add_0_root_add_94_carry_18_),
	.CI(add_6_root_add_0_root_add_94_carry_17_),
	.B(m29_17_),
	.A(m27_17_));
   FA_X1 add_6_root_add_0_root_add_94_U1_18 (.S(add_6_root_add_0_root_add_94_SUM_18_),
	.CO(add_6_root_add_0_root_add_94_carry_19_),
	.CI(add_6_root_add_0_root_add_94_carry_18_),
	.B(m29_18_),
	.A(m27_18_));
   FA_X1 add_6_root_add_0_root_add_94_U1_19 (.S(add_6_root_add_0_root_add_94_SUM_19_),
	.CO(add_6_root_add_0_root_add_94_carry_20_),
	.CI(add_6_root_add_0_root_add_94_carry_19_),
	.B(m29_19_),
	.A(m27_19_));
   FA_X1 add_13_root_add_0_root_add_94_U1_5 (.S(m29_5_),
	.CO(add_13_root_add_0_root_add_94_carry[6]),
	.CI(add_13_root_add_0_root_add_94_carry[5]),
	.B(m14[1]),
	.A(m6[2]));
   FA_X1 add_13_root_add_0_root_add_94_U1_6 (.S(m29_6_),
	.CO(add_13_root_add_0_root_add_94_carry[7]),
	.CI(add_13_root_add_0_root_add_94_carry[6]),
	.B(m14[2]),
	.A(m6[3]));
   FA_X1 add_13_root_add_0_root_add_94_U1_7 (.S(m29_7_),
	.CO(add_13_root_add_0_root_add_94_carry[8]),
	.CI(add_13_root_add_0_root_add_94_carry[7]),
	.B(m14[3]),
	.A(m6[4]));
   FA_X1 add_13_root_add_0_root_add_94_U1_8 (.S(m29_8_),
	.CO(add_13_root_add_0_root_add_94_carry[9]),
	.CI(add_13_root_add_0_root_add_94_carry[8]),
	.B(m14[4]),
	.A(m6[5]));
   FA_X1 add_13_root_add_0_root_add_94_U1_9 (.S(m29_9_),
	.CO(add_13_root_add_0_root_add_94_carry[10]),
	.CI(add_13_root_add_0_root_add_94_carry[9]),
	.B(m14[5]),
	.A(m6[6]));
   FA_X1 add_13_root_add_0_root_add_94_U1_10 (.S(m29_10_),
	.CO(add_13_root_add_0_root_add_94_carry[11]),
	.CI(add_13_root_add_0_root_add_94_carry[10]),
	.B(m14[6]),
	.A(m6[7]));
   FA_X1 add_13_root_add_0_root_add_94_U1_11 (.S(m29_11_),
	.CO(add_13_root_add_0_root_add_94_carry[12]),
	.CI(add_13_root_add_0_root_add_94_carry[11]),
	.B(m14[7]),
	.A(m6[8]));
   FA_X1 add_13_root_add_0_root_add_94_U1_12 (.S(m29_12_),
	.CO(add_13_root_add_0_root_add_94_carry[13]),
	.CI(add_13_root_add_0_root_add_94_carry[12]),
	.B(m14[8]),
	.A(m6[9]));
   FA_X1 add_13_root_add_0_root_add_94_U1_13 (.S(m29_13_),
	.CO(add_13_root_add_0_root_add_94_carry[14]),
	.CI(add_13_root_add_0_root_add_94_carry[13]),
	.B(m14[9]),
	.A(m6[10]));
   FA_X1 add_13_root_add_0_root_add_94_U1_14 (.S(m29_14_),
	.CO(add_13_root_add_0_root_add_94_carry[15]),
	.CI(add_13_root_add_0_root_add_94_carry[14]),
	.B(m14[10]),
	.A(m6[11]));
   FA_X1 add_13_root_add_0_root_add_94_U1_15 (.S(m29_15_),
	.CO(add_13_root_add_0_root_add_94_carry[16]),
	.CI(add_13_root_add_0_root_add_94_carry[15]),
	.B(m14[11]),
	.A(m6[12]));
   FA_X1 add_13_root_add_0_root_add_94_U1_16 (.S(m29_16_),
	.CO(add_13_root_add_0_root_add_94_carry[17]),
	.CI(add_13_root_add_0_root_add_94_carry[16]),
	.B(m14[12]),
	.A(m6[13]));
   FA_X1 add_13_root_add_0_root_add_94_U1_17 (.S(m29_17_),
	.CO(add_13_root_add_0_root_add_94_carry[18]),
	.CI(add_13_root_add_0_root_add_94_carry[17]),
	.B(m14[13]),
	.A(m6[14]));
   FA_X1 add_13_root_add_0_root_add_94_U1_18 (.S(m29_18_),
	.CO(add_13_root_add_0_root_add_94_carry[19]),
	.CI(add_13_root_add_0_root_add_94_carry[18]),
	.B(m14[14]),
	.A(m6[15]));
   FA_X1 add_12_root_add_0_root_add_94_U1_2 (.S(m39_2_),
	.CO(add_12_root_add_0_root_add_94_carry[3]),
	.CI(add_12_root_add_0_root_add_94_carry[2]),
	.B(m24_2_),
	.A(m18_2_));
   FA_X1 add_12_root_add_0_root_add_94_U1_3 (.S(m39_3_),
	.CO(add_12_root_add_0_root_add_94_carry[4]),
	.CI(add_12_root_add_0_root_add_94_carry[3]),
	.B(m24_3_),
	.A(m18_3_));
   FA_X1 add_12_root_add_0_root_add_94_U1_4 (.S(m39_4_),
	.CO(add_12_root_add_0_root_add_94_carry[5]),
	.CI(add_12_root_add_0_root_add_94_carry[4]),
	.B(m24_4_),
	.A(m18_4_));
   FA_X1 add_12_root_add_0_root_add_94_U1_5 (.S(m39_5_),
	.CO(add_12_root_add_0_root_add_94_carry[6]),
	.CI(add_12_root_add_0_root_add_94_carry[5]),
	.B(m24_5_),
	.A(m18_5_));
   FA_X1 add_12_root_add_0_root_add_94_U1_6 (.S(m39_6_),
	.CO(add_12_root_add_0_root_add_94_carry[7]),
	.CI(add_12_root_add_0_root_add_94_carry[6]),
	.B(m24_6_),
	.A(m18_6_));
   FA_X1 add_12_root_add_0_root_add_94_U1_7 (.S(m39_7_),
	.CO(add_12_root_add_0_root_add_94_carry[8]),
	.CI(add_12_root_add_0_root_add_94_carry[7]),
	.B(m24_7_),
	.A(m18_7_));
   FA_X1 add_12_root_add_0_root_add_94_U1_8 (.S(m39_8_),
	.CO(add_12_root_add_0_root_add_94_carry[9]),
	.CI(add_12_root_add_0_root_add_94_carry[8]),
	.B(m24_8_),
	.A(m18_8_));
   FA_X1 add_12_root_add_0_root_add_94_U1_9 (.S(m39_9_),
	.CO(add_12_root_add_0_root_add_94_carry[10]),
	.CI(add_12_root_add_0_root_add_94_carry[9]),
	.B(m24_9_),
	.A(m18_9_));
   FA_X1 add_12_root_add_0_root_add_94_U1_10 (.S(m39_10_),
	.CO(add_12_root_add_0_root_add_94_carry[11]),
	.CI(add_12_root_add_0_root_add_94_carry[10]),
	.B(m24_10_),
	.A(m18_10_));
   FA_X1 add_12_root_add_0_root_add_94_U1_11 (.S(m39_11_),
	.CO(add_12_root_add_0_root_add_94_carry[12]),
	.CI(add_12_root_add_0_root_add_94_carry[11]),
	.B(m24_11_),
	.A(m18_11_));
   FA_X1 add_12_root_add_0_root_add_94_U1_12 (.S(m39_12_),
	.CO(add_12_root_add_0_root_add_94_carry[13]),
	.CI(add_12_root_add_0_root_add_94_carry[12]),
	.B(m24_12_),
	.A(m18_12_));
   FA_X1 add_12_root_add_0_root_add_94_U1_13 (.S(m39_13_),
	.CO(add_12_root_add_0_root_add_94_carry[14]),
	.CI(add_12_root_add_0_root_add_94_carry[13]),
	.B(m24_13_),
	.A(m18_13_));
   FA_X1 add_12_root_add_0_root_add_94_U1_14 (.S(m39_14_),
	.CO(add_12_root_add_0_root_add_94_carry[15]),
	.CI(add_12_root_add_0_root_add_94_carry[14]),
	.B(m24_14_),
	.A(m18_14_));
   FA_X1 add_12_root_add_0_root_add_94_U1_15 (.S(m39_15_),
	.CO(add_12_root_add_0_root_add_94_carry[16]),
	.CI(add_12_root_add_0_root_add_94_carry[15]),
	.B(m24_15_),
	.A(m18_15_));
   FA_X1 add_12_root_add_0_root_add_94_U1_16 (.S(m39_16_),
	.CO(add_12_root_add_0_root_add_94_carry[17]),
	.CI(add_12_root_add_0_root_add_94_carry[16]),
	.B(m24_16_),
	.A(m18_16_));
   FA_X1 add_12_root_add_0_root_add_94_U1_17 (.S(m39_17_),
	.CO(add_12_root_add_0_root_add_94_carry[18]),
	.CI(add_12_root_add_0_root_add_94_carry[17]),
	.B(m24_17_),
	.A(m18_17_));
   FA_X1 add_9_root_add_0_root_add_94_U1_3 (.S(m37_3_),
	.CO(add_9_root_add_0_root_add_94_carry[4]),
	.CI(add_9_root_add_0_root_add_94_carry[3]),
	.B(m30_3_),
	.A(m36_3_));
   FA_X1 add_9_root_add_0_root_add_94_U1_4 (.S(m37_4_),
	.CO(add_9_root_add_0_root_add_94_carry[5]),
	.CI(add_9_root_add_0_root_add_94_carry[4]),
	.B(m30_4_),
	.A(m36_4_));
   FA_X1 add_9_root_add_0_root_add_94_U1_5 (.S(m37_5_),
	.CO(add_9_root_add_0_root_add_94_carry[6]),
	.CI(add_9_root_add_0_root_add_94_carry[5]),
	.B(m30_5_),
	.A(m36_5_));
   FA_X1 add_9_root_add_0_root_add_94_U1_6 (.S(m37_6_),
	.CO(add_9_root_add_0_root_add_94_carry[7]),
	.CI(add_9_root_add_0_root_add_94_carry[6]),
	.B(m30_6_),
	.A(m36_6_));
   FA_X1 add_9_root_add_0_root_add_94_U1_7 (.S(m37_7_),
	.CO(add_9_root_add_0_root_add_94_carry[8]),
	.CI(add_9_root_add_0_root_add_94_carry[7]),
	.B(m30_7_),
	.A(m36_7_));
   FA_X1 add_9_root_add_0_root_add_94_U1_8 (.S(m37_8_),
	.CO(add_9_root_add_0_root_add_94_carry[9]),
	.CI(add_9_root_add_0_root_add_94_carry[8]),
	.B(m30_8_),
	.A(m36_8_));
   FA_X1 add_9_root_add_0_root_add_94_U1_9 (.S(m37_9_),
	.CO(add_9_root_add_0_root_add_94_carry[10]),
	.CI(add_9_root_add_0_root_add_94_carry[9]),
	.B(m30_9_),
	.A(m36_9_));
   FA_X1 add_9_root_add_0_root_add_94_U1_10 (.S(m37_10_),
	.CO(add_9_root_add_0_root_add_94_carry[11]),
	.CI(add_9_root_add_0_root_add_94_carry[10]),
	.B(m30_10_),
	.A(m36_10_));
   FA_X1 add_9_root_add_0_root_add_94_U1_11 (.S(m37_11_),
	.CO(add_9_root_add_0_root_add_94_carry[12]),
	.CI(add_9_root_add_0_root_add_94_carry[11]),
	.B(m30_11_),
	.A(m36_11_));
   FA_X1 add_9_root_add_0_root_add_94_U1_12 (.S(m37_12_),
	.CO(add_9_root_add_0_root_add_94_carry[13]),
	.CI(add_9_root_add_0_root_add_94_carry[12]),
	.B(m30_12_),
	.A(m36_12_));
   FA_X1 add_9_root_add_0_root_add_94_U1_13 (.S(m37_13_),
	.CO(add_9_root_add_0_root_add_94_carry[14]),
	.CI(add_9_root_add_0_root_add_94_carry[13]),
	.B(m30_13_),
	.A(m36_13_));
   FA_X1 add_9_root_add_0_root_add_94_U1_14 (.S(m37_14_),
	.CO(add_9_root_add_0_root_add_94_carry[15]),
	.CI(add_9_root_add_0_root_add_94_carry[14]),
	.B(m30_14_),
	.A(m36_14_));
   FA_X1 add_9_root_add_0_root_add_94_U1_15 (.S(m37_15_),
	.CO(add_9_root_add_0_root_add_94_carry[16]),
	.CI(add_9_root_add_0_root_add_94_carry[15]),
	.B(m30_15_),
	.A(m36_15_));
   FA_X1 add_9_root_add_0_root_add_94_U1_16 (.S(m37_16_),
	.CO(add_9_root_add_0_root_add_94_carry[17]),
	.CI(add_9_root_add_0_root_add_94_carry[16]),
	.B(m30_16_),
	.A(m36_16_));
   FA_X1 add_9_root_add_0_root_add_94_U1_17 (.S(m37_17_),
	.CO(add_9_root_add_0_root_add_94_carry[18]),
	.CI(add_9_root_add_0_root_add_94_carry[17]),
	.B(m30_17_),
	.A(m36_17_));
   FA_X1 add_9_root_add_0_root_add_94_U1_18 (.S(m37_18_),
	.CO(add_9_root_add_0_root_add_94_carry[19]),
	.CI(add_9_root_add_0_root_add_94_carry[18]),
	.B(m30_18_),
	.A(m36_18_));
   FA_X1 add_9_root_add_0_root_add_94_U1_19 (.S(m37_19_),
	.CO(m37_20_),
	.CI(add_9_root_add_0_root_add_94_carry[19]),
	.B(m30_19_),
	.A(m36_19_));
   AND2_X1 U13 (.ZN(add_8_root_add_0_root_add_94_carry[1]),
	.A2(m34_0_),
	.A1(m42_0_));
   XOR2_X1 U14 (.Z(m43_0_),
	.B(m34_0_),
	.A(m42_0_));
   AND2_X1 U15 (.ZN(m39_19_),
	.A2(m24_18_),
	.A1(add_12_root_add_0_root_add_94_carry[18]));
   XOR2_X1 U16 (.Z(m39_18_),
	.B(add_12_root_add_0_root_add_94_carry[18]),
	.A(m24_18_));
   AND2_X1 U17 (.ZN(add_12_root_add_0_root_add_94_carry[2]),
	.A2(m18_1_),
	.A1(m24_1_));
   XOR2_X1 U18 (.Z(m39_1_),
	.B(m18_1_),
	.A(m24_1_));
   AND2_X1 U19 (.ZN(add_9_root_add_0_root_add_94_carry[3]),
	.A2(m36_2_),
	.A1(m30_2_));
   XOR2_X1 U20 (.Z(m37_2_),
	.B(m36_2_),
	.A(m30_2_));
   AND2_X1 U21 (.ZN(add_6_root_add_0_root_add_94_carry_21_),
	.A2(m29_20_),
	.A1(add_6_root_add_0_root_add_94_carry_20_));
   XOR2_X1 U22 (.Z(add_6_root_add_0_root_add_94_SUM_20_),
	.B(add_6_root_add_0_root_add_94_carry_20_),
	.A(m29_20_));
   AND2_X1 U23 (.ZN(add_6_root_add_0_root_add_94_carry_4_),
	.A2(m29_3_),
	.A1(m27_3_));
   XOR2_X1 U24 (.Z(add_6_root_add_0_root_add_94_SUM_3_),
	.B(m27_3_),
	.A(m29_3_));
   AND2_X1 U25 (.ZN(m29_20_),
	.A2(m14[15]),
	.A1(add_13_root_add_0_root_add_94_carry[19]));
   XOR2_X1 U26 (.Z(m29_19_),
	.B(add_13_root_add_0_root_add_94_carry[19]),
	.A(m14[15]));
   AND2_X1 U27 (.ZN(add_13_root_add_0_root_add_94_carry[5]),
	.A2(m6[1]),
	.A1(m14[0]));
   XOR2_X1 U28 (.Z(m29_4_),
	.B(m6[1]),
	.A(m14[0]));
   AND2_X1 U29 (.ZN(m31_18_),
	.A2(m2[15]),
	.A1(add_14_root_add_0_root_add_94_carry[17]));
   XOR2_X1 U30 (.Z(m31_17_),
	.B(add_14_root_add_0_root_add_94_carry[17]),
	.A(m2[15]));
   AND2_X1 U31 (.ZN(add_14_root_add_0_root_add_94_carry[3]),
	.A2(m0[1]),
	.A1(m2[0]));
   XOR2_X1 U32 (.Z(m31_2_),
	.B(m0[1]),
	.A(m2[0]));
endmodule

